{"version":3,"file":"slimselect.umd.js","sources":["../src/src/slim-select/config.ts","../src/src/slim-select/helper.ts","../src/src/slim-select/select.ts","../src/src/slim-select/data.ts","../src/src/slim-select/slim.ts","../src/src/slim-select/index.ts"],"sourcesContent":["import { Option } from './data'\n\ninterface Constructor {\n  select: HTMLSelectElement\n  isAjax: boolean\n  showSearch?: boolean\n  searchPlaceholder?: string\n  searchText?: string\n  searchingText?: string\n  searchFocus?: boolean\n  searchHighlight?: boolean\n  searchFilter?: (opt: Option, search: string) => boolean\n  closeOnSelect?: boolean\n  showContent?: string\n  placeholderText?: string\n  allowDeselect?: boolean\n  allowDeselectOption?: boolean\n  hideSelectedOption?: boolean\n  deselectLabel?: string\n  isEnabled?: boolean\n  valuesUseText?: boolean\n  showOptionTooltips?: boolean\n  selectByGroup?: boolean\n  limit?: number\n  timeoutDelay?: number\n  addToBody?: boolean\n}\n\nexport class Config {\n  public id: string = ''\n  public style: string\n  public class: string[]\n  public isMultiple: boolean = false\n  public isAjax: boolean = false\n  public isSearching: boolean = false\n  public showSearch: boolean = true\n  public searchFocus: boolean = true\n  public searchHighlight: boolean = false\n  public closeOnSelect: boolean = true\n  public showContent: string = 'auto' // options: auto, up, down\n  public searchPlaceholder: string = 'Search'\n  public searchText: string = 'No Results'\n  public searchingText: string = 'Searching...'\n  public placeholderText: string = 'Select Value'\n  public allowDeselect: boolean = false\n  public allowDeselectOption: boolean = false\n  public hideSelectedOption: boolean = false\n  public deselectLabel: string = 'x'\n  public isEnabled: boolean = true\n  public valuesUseText: boolean = false\n  public showOptionTooltips: boolean = false\n  public selectByGroup: boolean = false\n  public limit: number = 0\n  public timeoutDelay: number = 200\n  public addToBody: boolean = false\n\n  // Classes\n  public readonly main: string = 'ss-main'\n  public readonly singleSelected: string = 'ss-single-selected'\n  public readonly arrow: string = 'ss-arrow'\n  public readonly multiSelected: string = 'ss-multi-selected'\n  public readonly add: string = 'ss-add'\n  public readonly plus: string = 'ss-plus'\n  public readonly values: string = 'ss-values'\n  public readonly value: string = 'ss-value'\n  public readonly valueText: string = 'ss-value-text'\n  public readonly valueDelete: string = 'ss-value-delete'\n  public readonly content: string = 'ss-content'\n  public readonly open: string = 'ss-open'\n  public readonly openAbove: string = 'ss-open-above'\n  public readonly openBelow: string = 'ss-open-below'\n  public readonly search: string = 'ss-search'\n  public readonly searchHighlighter: string = 'ss-search-highlight'\n  public readonly addable: string = 'ss-addable'\n  public readonly list: string = 'ss-list'\n  public readonly optgroup: string = 'ss-optgroup'\n  public readonly optgroupLabel: string = 'ss-optgroup-label'\n  public readonly optgroupLabelSelectable: string = 'ss-optgroup-label-selectable'\n  public readonly option: string = 'ss-option'\n  public readonly optionSelected: string = 'ss-option-selected'\n  public readonly highlighted: string = 'ss-highlighted'\n  public readonly disabled: string = 'ss-disabled'\n  public readonly hide: string = 'ss-hide'\n\n  constructor(info: Constructor) {\n    this.id = 'ss-' + Math.floor(Math.random() * 100000)\n    this.style = info.select.style.cssText\n    this.class = info.select.className.split(' ')\n\n    this.isMultiple = info.select.multiple\n    this.isAjax = info.isAjax\n    this.showSearch = (info.showSearch === false ? false : true)\n    this.searchFocus = (info.searchFocus === false ? false : true)\n    this.searchHighlight = (info.searchHighlight === true ? true : false)\n    this.closeOnSelect = (info.closeOnSelect === false ? false : true)\n    if (info.showContent) { this.showContent = info.showContent }\n    this.isEnabled = (info.isEnabled === false ? false : true)\n    if (info.searchPlaceholder) { this.searchPlaceholder = info.searchPlaceholder }\n    if (info.searchText) { this.searchText = info.searchText }\n    if (info.searchingText) { this.searchingText = info.searchingText }\n    if (info.placeholderText) { this.placeholderText = info.placeholderText }\n    this.allowDeselect = (info.allowDeselect === true ? true : false)\n    this.allowDeselectOption = (info.allowDeselectOption === true ? true : false)\n    this.hideSelectedOption = (info.hideSelectedOption === true ? true : false)\n    if (info.deselectLabel) { this.deselectLabel = info.deselectLabel }\n    if (info.valuesUseText) { this.valuesUseText = info.valuesUseText }\n    if (info.showOptionTooltips) { this.showOptionTooltips = info.showOptionTooltips }\n    if (info.selectByGroup) { this.selectByGroup = info.selectByGroup }\n    if (info.limit) { this.limit = info.limit }\n    if (info.searchFilter) { this.searchFilter = info.searchFilter }\n    if (info.timeoutDelay != null) { this.timeoutDelay = info.timeoutDelay }\n    this.addToBody = (info.addToBody === true ? true : false)\n  }\n\n  public searchFilter(opt: Option, search: string): boolean {\n    return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1\n  }\n}\n","export function hasClassInTree(element: HTMLElement, className: string) {\n  function hasClass(e: HTMLElement, c: string) {\n    if (!(!c || !e || !e.classList || !e.classList.contains(c))) { return e }\n    return null\n  }\n\n  function parentByClass(e: any, c: string): any {\n    if (!e || e === document as any) {\n      return null\n    } else if (hasClass(e, c)) {\n      return e\n    } else {\n      return parentByClass(e.parentNode, c)\n    }\n  }\n\n  return hasClass(element, className) || parentByClass(element, className)\n}\n\nexport function ensureElementInView(container: HTMLElement, element: HTMLElement): void {\n  // Determine container top and bottom\n  const cTop = container.scrollTop + container.offsetTop // Make sure to have offsetTop\n  const cBottom = cTop + container.clientHeight\n\n  // Determine element top and bottom\n  const eTop = element.offsetTop\n  const eBottom = eTop + element.clientHeight\n\n  // Check if out of view\n  if (eTop < cTop) {\n    container.scrollTop -= (cTop - eTop)\n  } else if (eBottom > cBottom) {\n    container.scrollTop += (eBottom - cBottom)\n  }\n}\n\nexport function putContent(el: HTMLElement, currentPosition: string, isOpen: boolean): string {\n  const height = el.offsetHeight\n  const rect = el.getBoundingClientRect()\n  const elemTop = (isOpen ? rect.top : rect.top - height)\n  const elemBottom = (isOpen ? rect.bottom : rect.bottom + height)\n\n  if (elemTop <= 0) { return 'below' }\n  if (elemBottom >= window.innerHeight) { return 'above' }\n  return (isOpen ? currentPosition : 'below')\n}\n\nexport function debounce(func: (...params: any[]) => void, wait = 100, immediate = false): () => void {\n  let timeout: any\n  return function(this: any, ...args: any[]) {\n    const context = self\n    const later = () => {\n      timeout = null\n      if (!immediate) { func.apply(context, args) }\n    }\n    const callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) { func.apply(context, args) }\n  }\n}\n\nexport function isValueInArrayOfObjects(selected: any, key: string, value: string): boolean {\n  if (!Array.isArray(selected)) {\n    return selected[key] === value\n  }\n\n  for (const s of selected) {\n    if (s && s[key] && s[key] === value) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function highlight(str: string, search: any, className: string) {\n  // the completed string will be itself if already set, otherwise, the string that was passed in\n  let completedString: any = str\n  const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i')\n\n  // If the regex doesn't match the string just exit\n  if (!str.match(regex)) { return str }\n\n  // Otherwise, get to highlighting\n  const matchStartPosition = (str.match(regex) as any).index\n  const matchEndPosition = matchStartPosition + (str.match(regex) as any)[0].toString().length\n  const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition)\n  completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`)\n  return completedString\n}\n\nexport function kebabCase(str: string) {\n  const result = str.replace(\n    /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g,\n    (match) => '-' + match.toLowerCase()\n  )\n  return (str[0] === str[0].toUpperCase())\n    ? result.substring(1)\n    : result\n}\n\n// Custom events\n(() => {\n  const w = (window as any)\n  if (typeof w.CustomEvent === 'function') { return }\n\n  function CustomEvent(event: any, params: any) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    const evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n  CustomEvent.prototype = w.Event.prototype\n  w.CustomEvent = CustomEvent\n})()\n","import SlimSelect from './index'\nimport { Option, Optgroup, dataArray } from './data'\nimport { kebabCase } from './helper'\n\ninterface Constructor {\n  select: HTMLSelectElement\n  main: SlimSelect\n}\n\nexport class Select {\n  public element: HTMLSelectElement\n  public main: SlimSelect\n  public mutationObserver: MutationObserver | null\n  public triggerMutationObserver: boolean = true\n  constructor(info: Constructor) {\n    this.element = info.select\n    this.main = info.main\n\n    // If original select is set to disabled lets make sure slim is too\n    if (this.element.disabled) { this.main.config.isEnabled = false }\n\n    this.addAttributes()\n    this.addEventListeners()\n    this.mutationObserver = null\n    this.addMutationObserver()\n\n    // Add slim to original select dropdown\n    const el = this.element as any\n    el.slim = info.main\n  }\n\n  public setValue(): void {\n    if (!this.main.data.getSelected()) { return }\n\n    if (this.main.config.isMultiple) {\n      // If multiple loop through options and set selected\n      const selected = this.main.data.getSelected() as Option[]\n      const options = this.element.options as any as HTMLOptionElement[]\n      for (const o of options) {\n        o.selected = false\n        for (const s of selected) {\n          if (s.value === o.value) {\n            o.selected = true\n          }\n        }\n      }\n    } else {\n      // If single select simply set value\n      const selected = this.main.data.getSelected() as any\n      this.element.value = (selected ? selected.value : '')\n    }\n\n    // Do not trigger onChange callbacks for this event listener\n    this.main.data.isOnChangeEnabled = false\n    this.element.dispatchEvent(new CustomEvent('change', { bubbles: true }))\n    this.main.data.isOnChangeEnabled = true\n  }\n\n  public addAttributes() {\n    this.element.tabIndex = -1\n    this.element.style.display = 'none'\n\n    // Add slim select id\n    this.element.dataset.ssid = this.main.config.id\n    this.element.setAttribute('aria-hidden', 'true')\n  }\n\n  // Add onChange listener to original select\n  public addEventListeners() {\n    this.element.addEventListener('change', (e: Event) => {\n      this.main.data.setSelectedFromSelect()\n      this.main.render()\n    })\n  }\n\n  // Add MutationObserver to select\n  public addMutationObserver(): void {\n    // Only add if not in ajax mode\n    if (this.main.config.isAjax) { return }\n\n    this.mutationObserver = new MutationObserver((mutations) => {\n      if (!this.triggerMutationObserver) {return}\n\n      this.main.data.parseSelectData()\n      this.main.data.setSelectedFromSelect()\n      this.main.render()\n\n      mutations.forEach((mutation) => {\n        if (mutation.attributeName === 'class') {\n          this.main.slim.updateContainerDivClass(this.main.slim.container)\n        }\n      })\n    })\n\n    this.observeMutationObserver()\n  }\n\n  public observeMutationObserver(): void {\n    if (!this.mutationObserver) { return }\n\n    this.mutationObserver.observe(this.element, {\n      attributes: true,\n      childList: true,\n      characterData: true\n    })\n  }\n\n  public disconnectMutationObserver(): void {\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect()\n    }\n  }\n\n  // Create select element and optgroup/options\n  public create(data: dataArray): void {\n    // Clear out select\n    this.element.innerHTML = ''\n\n    for (const d of data) {\n      if (d.hasOwnProperty('options')) {\n        const optgroupObject = d as Optgroup\n        const optgroupEl = document.createElement('optgroup') as HTMLOptGroupElement\n        optgroupEl.label = optgroupObject.label\n        if (optgroupObject.options) {\n          for (const oo of optgroupObject.options) {\n            optgroupEl.appendChild(this.createOption(oo))\n          }\n        }\n        this.element.appendChild(optgroupEl)\n      } else {\n        this.element.appendChild(this.createOption(d))\n      }\n    }\n  }\n\n  public createOption(info: any): HTMLOptionElement {\n    const optionEl = document.createElement('option')\n    optionEl.value = info.value !== '' ? info.value : info.text\n    optionEl.innerHTML = info.innerHTML || info.text\n    if (info.selected) { optionEl.selected = info.selected }\n    if (info.display === false) {\n      optionEl.style.display = 'none'\n    }\n    if (info.disabled) { optionEl.disabled = true }\n    if (info.placeholder) { optionEl.setAttribute('data-placeholder', 'true') }\n    if (info.mandatory) { optionEl.setAttribute('data-mandatory', 'true') }\n    if (info.class) {\n      info.class.split(' ').forEach((optionClass: string) => {\n        optionEl.classList.add(optionClass)\n      })\n    }\n    if (info.data && typeof info.data === 'object') {\n      Object.keys(info.data).forEach((key) => {\n        optionEl.setAttribute('data-' + kebabCase(key), info.data[key])\n      })\n    }\n\n    return optionEl\n  }\n}\n","import SlimSelect from './index'\n\ninterface Constructor { main: SlimSelect }\n\nexport type dataArray = dataObject[]\nexport type dataObject = Optgroup | Option\nexport interface Optgroup {\n  label: string\n  options?: Option[]\n}\n\nexport interface Option {\n  id?: string\n  value?: string\n  text: string\n  innerHTML?: string\n  selected?: boolean\n  display?: boolean\n  disabled?: boolean\n  placeholder?: boolean|string\n  class?: string\n  style?: string\n  data?: object\n  mandatory?: boolean\n}\n\n// Class is responsible for managing the data\nexport class Data {\n  public main: SlimSelect\n  public searchValue: string\n  public data: dataObject[]\n  public filtered: dataObject[] | null\n  public contentOpen: boolean = false\n  public contentPosition: string = 'below'\n  public isOnChangeEnabled: boolean = true\n  constructor(info: Constructor) {\n    this.main = info.main\n    this.searchValue = ''\n    this.data = []\n    this.filtered = null\n\n    this.parseSelectData()\n    this.setSelectedFromSelect()\n  }\n\n  public newOption(info: any): Option {\n    return {\n      id: (info.id ? info.id : String(Math.floor(Math.random() * 100000000))),\n      value: (info.value ? info.value : ''),\n      text: (info.text ? info.text : ''),\n      innerHTML: (info.innerHTML ? info.innerHTML : ''),\n      selected: (info.selected ? info.selected : false),\n      display: (info.display !== undefined ? info.display : true),\n      disabled: (info.disabled ? info.disabled : false),\n      placeholder: (info.placeholder ? info.placeholder : false),\n      class: (info.class ? info.class : undefined),\n      data: (info.data ? info.data : {}),\n      mandatory: (info.mandatory ? info.mandatory : false)\n    }\n  }\n\n  // Add to the current data array\n  public add(data: Option) {\n    this.data.push({\n      id: String(Math.floor(Math.random() * 100000000)),\n      value: data.value,\n      text: data.text,\n      innerHTML: '',\n      selected: false,\n      display: true,\n      disabled: false,\n      placeholder: false,\n      class: undefined,\n      mandatory: data.mandatory,\n      data: {}\n    })\n  }\n\n  // From passed in select element pull optgroup and options into data\n  public parseSelectData() {\n    this.data = []\n    // Loop through nodes and create data\n    const nodes = (this.main.select.element as HTMLSelectElement).childNodes as any as HTMLOptGroupElement[] | HTMLOptionElement[]\n    for (const n of nodes) {\n      if (n.nodeName === 'OPTGROUP') {\n        const node = n as HTMLOptGroupElement\n        const optgroup = {\n          label: node.label,\n          options: [] as Option[]\n        }\n        const options = n.childNodes as any as HTMLOptionElement[]\n        for (const o of options) {\n          if (o.nodeName === 'OPTION') {\n            const option = this.pullOptionData(o as HTMLOptionElement)\n            optgroup.options.push(option)\n\n            // If option has placeholder set to true set placeholder text\n            if (option.placeholder && option.text.trim() !== '') {\n              this.main.config.placeholderText = option.text\n            }\n          }\n        }\n        this.data.push(optgroup)\n      } else if (n.nodeName === 'OPTION') {\n        const option = this.pullOptionData(n as HTMLOptionElement)\n        this.data.push(option)\n\n        // If option has placeholder set to true set placeholder text\n        if (option.placeholder && option.text.trim() !== '') {\n          this.main.config.placeholderText = option.text\n        }\n      }\n    }\n  }\n\n  // From passed in option pull pieces of usable information\n  public pullOptionData(option: HTMLOptionElement): Option {\n    return {\n      id: (option.dataset ? option.dataset.id : false) || String(Math.floor(Math.random() * 100000000)),\n      value: option.value,\n      text: option.text,\n      innerHTML: option.innerHTML,\n      selected: option.selected,\n      disabled: option.disabled,\n      placeholder: option.dataset.placeholder === 'true',\n      class: option.className,\n      style: option.style.cssText,\n      data: option.dataset,\n      mandatory: (option.dataset ? option.dataset.mandatory === 'true' : false)\n    }\n  }\n\n  // From select element get current selected and set selected\n  public setSelectedFromSelect(): void {\n    if (this.main.config.isMultiple) {\n      const options = this.main.select.element.options as any as HTMLOptionElement[]\n      const newSelected: string[] = []\n      for (const o of options) {\n        if (o.selected) {\n          const newOption = this.getObjectFromData(o.value, 'value')\n          if (newOption && newOption.id) {\n            newSelected.push(newOption.id)\n          }\n        }\n      }\n      this.setSelected(newSelected, 'id')\n    } else {\n      const element = this.main.select.element\n\n      // Single select element\n      if (element.selectedIndex !== -1) {\n        const option = element.options[element.selectedIndex] as HTMLOptionElement\n        const value = option.value\n        this.setSelected(value, 'value')\n      }\n    }\n  }\n\n  // From value set the selected value\n  public setSelected(value: string | string[], type = 'id'): void {\n    // Loop through data and set selected values\n    for (const d of this.data) {\n      // Deal with optgroups\n      if (d.hasOwnProperty('label')) {\n        if (d.hasOwnProperty('options')) {\n          const options = (d as Optgroup).options\n          if (options) {\n            for (const o of options) {\n              // Do not select if its a placeholder\n              if (o.placeholder) {continue}\n\n              o.selected = this.shouldBeSelected(o, value, type)\n            }\n          }\n        }\n      } else {\n        (d as Option).selected = this.shouldBeSelected((d as Option), value, type)\n      }\n    }\n  }\n\n  // Determines whether or not passed in option should be selected based upon possible values\n  public shouldBeSelected(option: Option, value: string | string[], type: string = 'id'): boolean {\n    if (Array.isArray(value)) {\n      for (const v of value) {\n        if (type in option && String((option as any)[type]) === String(v)) {\n          return true\n        }\n      }\n    } else {\n      if (type in option && String((option as any)[type]) === String(value)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  // From data get option | option[] of selected values\n  // If single select return last selected value\n  public getSelected(): Option | Option[] {\n    let value: Option = { text: '', placeholder: this.main.config.placeholderText } // Dont worry about setting this(make typescript happy). If single a value will be selected\n    const values: Option[] = []\n    for (const d of this.data) {\n      // Deal with optgroups\n      if (d.hasOwnProperty('label')) {\n        if (d.hasOwnProperty('options')) {\n          const options = (d as Optgroup).options\n          if (options) {\n            for (const o of options) {\n              if (o.selected) {\n                // If single return option\n                if (!this.main.config.isMultiple) {\n                  value = o\n                } else {\n                  // Push to multiple array\n                  values.push(o)\n                }\n              }\n            }\n          }\n        }\n      } else {\n        // Push options to array\n        if ((d as Option).selected) {\n          // If single return option\n          if (!this.main.config.isMultiple) {\n            value = d as Option\n          } else {\n            // Push to multiple array\n            values.push(d as Option)\n          }\n        }\n      }\n    }\n\n    // Either return array or object or null\n    if (this.main.config.isMultiple) {\n      return values\n    }\n    return value\n  }\n\n  // If select type is multiple append value and set selected\n  public addToSelected(value: string, type = 'id') {\n    if (this.main.config.isMultiple) {\n      const values = []\n      const selected = this.getSelected()\n      if (Array.isArray(selected)) {\n        for (const s of selected) {\n          values.push((s as any)[type])\n        }\n      }\n      values.push(value)\n\n      this.setSelected(values, type)\n    }\n  }\n\n  // Remove object from selected\n  public removeFromSelected(value: string, type = 'id') {\n    if (this.main.config.isMultiple) {\n      const values = []\n      const selected = this.getSelected() as Option[]\n      for (const s of selected) {\n        if (String((s as any)[type]) !== String(value)) {\n          values.push((s as any)[type])\n        }\n      }\n\n      this.setSelected(values, type)\n    }\n  }\n\n  // Trigger onChange callback\n  public onDataChange(): void {\n    if (this.main.onChange && this.isOnChangeEnabled) {\n      this.main.onChange(JSON.parse(JSON.stringify(this.getSelected())))\n    }\n  }\n\n  // Take in a value loop through the data till you find it and return it\n  public getObjectFromData(value: string, type = 'id'): Option | null {\n    for (const d of this.data) {\n      // If option check if value is the same\n      if (type in d && String((d as any)[type]) === String(value)) {\n        return d as Option\n      }\n      // If optgroup loop through options\n      if (d.hasOwnProperty('options')) {\n        const optgroupObject = d as Optgroup\n        if (optgroupObject.options) {\n          for (const oo of optgroupObject.options) {\n            if (String((oo as any)[type]) === String(value)) {\n              return oo\n            }\n          }\n        }\n      }\n    }\n\n    return null\n  }\n\n  // Take in search string and return filtered list of values\n  public search(search: string) {\n    this.searchValue = search\n    if (search.trim() === '') { this.filtered = null; return }\n\n    const searchFilter = this.main.config.searchFilter\n    const valuesArray = this.data.slice(0)\n    search = search.trim()\n    const filtered = valuesArray.map((obj) => {\n      // If optgroup\n      if (obj.hasOwnProperty('options')) {\n        const optgroupObj = obj as Optgroup\n        let options: Option[] = []\n        if (optgroupObj.options) {\n          options = optgroupObj.options.filter((opt) => {\n            return searchFilter(opt, search)\n          })\n        }\n        if (options.length !== 0) {\n          const optgroup = (Object as any).assign({}, optgroupObj) // Break pointer\n          optgroup.options = options\n          return optgroup\n        }\n      }\n\n      // If single option\n      if (obj.hasOwnProperty('text')) {\n        const optionObj = obj as Option\n        if (searchFilter(optionObj, search)) { return obj }\n      }\n\n      return null\n    })\n\n    // Filter out false values\n    this.filtered = filtered.filter((info) => info)\n  }\n}\n\nexport function validateData(data: dataArray): boolean {\n  if (!data) { console.error('Data must be an array of objects'); return false }\n  let isValid = false\n  let errorCount = 0\n\n  for (const d of data) {\n    if (d.hasOwnProperty('label')) {\n      if (d.hasOwnProperty('options')) {\n        const optgroup = d as Optgroup\n        const options = optgroup.options\n        if (options) {\n          for (const o of options) {\n            isValid = validateOption(o)\n            if (!isValid) { errorCount++ }\n          }\n        }\n      }\n    } else {\n      const option = d as Option\n      isValid = validateOption(option)\n      if (!isValid) { errorCount++ }\n    }\n  }\n\n  return errorCount === 0\n}\n\nexport function validateOption(option: Option): boolean {\n  if (option.text === undefined) {\n    console.error('Data object option must have at least have a text value. Check object: ' + JSON.stringify(option))\n    return false\n  }\n  return true\n}\n","import SlimSelect from './index'\nimport { ensureElementInView, isValueInArrayOfObjects, highlight } from './helper'\nimport { Option, Optgroup, validateOption } from './data'\n\ninterface SingleSelected {\n  container: HTMLDivElement\n  placeholder: HTMLSpanElement\n  deselect: HTMLSpanElement\n  arrowIcon: {\n    container: HTMLSpanElement\n    arrow: HTMLSpanElement\n  }\n}\n\ninterface MultiSelected {\n  container: HTMLDivElement\n  values: HTMLDivElement\n  add: HTMLDivElement\n  plus: HTMLSpanElement\n}\n\ninterface Search {\n  container: HTMLDivElement\n  input: HTMLInputElement\n  addable?: HTMLDivElement\n}\n\n// Class is responsible for creating all the elements\nexport class Slim {\n  public main: SlimSelect\n  public container: HTMLDivElement\n  public singleSelected: SingleSelected | null\n  public multiSelected: MultiSelected | null\n  public content: HTMLDivElement\n  public search: Search\n  public list: HTMLDivElement\n  constructor(info: { main: SlimSelect }) {\n    this.main = info.main\n\n    // Create elements in order of appending\n    this.container = this.containerDiv()\n    this.content = this.contentDiv()\n    this.search = this.searchDiv()\n    this.list = this.listDiv()\n    this.options()\n\n    this.singleSelected = null\n    this.multiSelected = null\n    if (this.main.config.isMultiple) {\n      this.multiSelected = this.multiSelectedDiv()\n      if (this.multiSelected) {\n        this.container.appendChild(this.multiSelected.container)\n      }\n    } else {\n      this.singleSelected = this.singleSelectedDiv()\n      this.container.appendChild(this.singleSelected.container)\n    }\n    if (this.main.config.addToBody) {\n      // add the id to the content as a class as well\n      // this is important on touch devices as the close method is\n      // triggered when clicks on the document body occur\n      this.content.classList.add(this.main.config.id)\n      document.body.appendChild(this.content)\n    } else {\n      this.container.appendChild(this.content)\n    }\n    this.content.appendChild(this.search.container)\n    this.content.appendChild(this.list)\n  }\n\n  // Create main container\n  public containerDiv(): HTMLDivElement {\n    // Create main container\n    const container = document.createElement('div') as HTMLDivElement\n\n    // Add style and classes\n    container.style.cssText = this.main.config.style\n\n    this.updateContainerDivClass(container)\n\n    return container\n  }\n\n  // Will look at the original select and pull classes from it\n  public updateContainerDivClass(container: HTMLDivElement) {\n    // Set config class\n    this.main.config.class = this.main.select.element.className.split(' ')\n\n    // Clear out classlist\n    container.className = ''\n\n    // Loop through config class and add\n    container.classList.add(this.main.config.id)\n    container.classList.add(this.main.config.main)\n    for (const c of this.main.config.class) {\n      if (c.trim() !== '') {\n        container.classList.add(c)\n      }\n    }\n  }\n\n  public singleSelectedDiv(): SingleSelected {\n    const container: HTMLDivElement = document.createElement('div')\n    container.classList.add(this.main.config.singleSelected)\n\n    // Placeholder text\n    const placeholder: HTMLSpanElement = document.createElement('span')\n    placeholder.classList.add('placeholder')\n    container.appendChild(placeholder)\n\n    // Deselect\n    const deselect = document.createElement('span')\n    deselect.innerHTML = this.main.config.deselectLabel\n    deselect.classList.add('ss-deselect')\n    deselect.onclick = (e) => {\n      e.stopPropagation()\n\n      // Dont do anything if disabled\n      if (!this.main.config.isEnabled) {return}\n\n      this.main.set('')\n    }\n    container.appendChild(deselect)\n\n    // Arrow\n    const arrowContainer: HTMLSpanElement = document.createElement('span')\n    arrowContainer.classList.add(this.main.config.arrow)\n    const arrowIcon = document.createElement('span')\n    arrowIcon.classList.add('arrow-down')\n    arrowContainer.appendChild(arrowIcon)\n    container.appendChild(arrowContainer)\n\n    // Add onclick for main selector div\n    container.onclick = () => {\n      if (!this.main.config.isEnabled) { return }\n\n      this.main.data.contentOpen ? this.main.close() : this.main.open()\n    }\n\n    return {\n      container,\n      placeholder,\n      deselect,\n      arrowIcon: {\n        container: arrowContainer,\n        arrow: arrowIcon\n      }\n    }\n  }\n\n  // Based upon current selection set placeholder text\n  public placeholder(): void {\n    const selected = this.main.data.getSelected() as Option\n\n    // Placeholder display\n    if (selected === null || (selected && selected.placeholder)) {\n      const placeholder = document.createElement('span')\n      placeholder.classList.add(this.main.config.disabled)\n      placeholder.innerHTML = this.main.config.placeholderText\n      if (this.singleSelected) {\n        this.singleSelected.placeholder.innerHTML = placeholder.outerHTML\n      }\n    } else {\n      let selectedValue = ''\n      if (selected) {\n        selectedValue = selected.innerHTML && this.main.config.valuesUseText !== true ? selected.innerHTML : selected.text\n      }\n      if (this.singleSelected) {\n        this.singleSelected.placeholder.innerHTML = (selected ? selectedValue : '')\n      }\n    }\n  }\n\n  // Based upon current selection/settings hide/show deselect\n  public deselect(): void {\n    if (this.singleSelected) {\n      // if allowDeselect is false just hide it\n      if (!this.main.config.allowDeselect) {\n        this.singleSelected.deselect.classList.add('ss-hide')\n        return\n      }\n\n      if (this.main.selected() === '') {\n        this.singleSelected.deselect.classList.add('ss-hide')\n      } else {\n        this.singleSelected.deselect.classList.remove('ss-hide')\n      }\n    }\n  }\n\n  public multiSelectedDiv(): MultiSelected {\n    const container = document.createElement('div')\n    container.classList.add(this.main.config.multiSelected)\n\n    const values = document.createElement('div')\n    values.classList.add(this.main.config.values)\n    container.appendChild(values)\n\n    const add = document.createElement('div')\n    add.classList.add(this.main.config.add)\n    const plus = document.createElement('span')\n    plus.classList.add(this.main.config.plus)\n    plus.onclick = (e) => {\n      if (this.main.data.contentOpen) {\n        this.main.close()\n        e.stopPropagation()\n      }\n    }\n    add.appendChild(plus)\n    container.appendChild(add)\n\n    container.onclick = (e) => {\n      if (!this.main.config.isEnabled) { return }\n\n      // Open only if you are not clicking on x text\n      const target = e.target as Element\n      if (!target.classList.contains(this.main.config.valueDelete)) {\n        this.main.data.contentOpen ? this.main.close() : this.main.open()\n      }\n    }\n\n    return {\n      container,\n      values,\n      add,\n      plus\n    }\n  }\n\n  // Get selected values and append to multiSelected values container\n  // and remove those who shouldnt exist\n  public values(): void {\n    if (!this.multiSelected) { return }\n    let currentNodes = this.multiSelected.values.childNodes as any as HTMLDivElement[]\n    const selected = this.main.data.getSelected() as Option[]\n\n    // Remove nodes that shouldnt be there\n    let exists\n    const nodesToRemove = []\n    for (const c of currentNodes) {\n      exists = true\n      for (const s of selected) {\n        if (String(s.id) === String(c.dataset.id)) {\n          exists = false\n        }\n      }\n\n      if (exists) { nodesToRemove.push(c) }\n    }\n\n    for (const n of nodesToRemove) {\n      n.classList.add('ss-out')\n      this.multiSelected.values.removeChild(n)\n    }\n\n    // Add values that dont currently exist\n    currentNodes = this.multiSelected.values.childNodes as any as HTMLDivElement[]\n    for (let s = 0; s < selected.length; s++) {\n      exists = false\n      for (const c of currentNodes) {\n        if (String(selected[s].id) === String(c.dataset.id)) {\n          exists = true\n        }\n      }\n\n      if (!exists) {\n        if (currentNodes.length === 0 || !HTMLElement.prototype.insertAdjacentElement) {\n          this.multiSelected.values.appendChild(this.valueDiv(selected[s]))\n        } else if (s === 0) {\n          this.multiSelected.values.insertBefore(this.valueDiv(selected[s]), (currentNodes[s] as any))\n        } else {\n          (currentNodes[s - 1] as any).insertAdjacentElement('afterend', this.valueDiv(selected[s]))\n        }\n      }\n    }\n\n    // If there are no values set placeholder\n    if (selected.length === 0) {\n      const placeholder = document.createElement('span')\n      placeholder.classList.add(this.main.config.disabled)\n      placeholder.innerHTML = this.main.config.placeholderText\n      this.multiSelected.values.innerHTML = placeholder.outerHTML\n    }\n  }\n\n  public valueDiv(optionObj: Option): HTMLDivElement {\n    const value = document.createElement('div')\n    value.classList.add(this.main.config.value)\n    value.dataset.id = optionObj.id\n\n    const text = document.createElement('span')\n    text.classList.add(this.main.config.valueText)\n    text.innerHTML = (optionObj.innerHTML && this.main.config.valuesUseText !== true ? optionObj.innerHTML : optionObj.text)\n    value.appendChild(text)\n\n    if (!optionObj.mandatory) {\n      const deleteSpan = document.createElement('span')\n      deleteSpan.classList.add(this.main.config.valueDelete)\n      deleteSpan.innerHTML = this.main.config.deselectLabel\n      deleteSpan.onclick = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        let shouldUpdate = false\n\n        // If no beforeOnChange is set automatically update at end\n        if (!this.main.beforeOnChange) {shouldUpdate = true}\n\n        if (this.main.beforeOnChange) {\n          const selected = this.main.data.getSelected() as Option\n          const currentValues = JSON.parse(JSON.stringify(selected))\n\n          // Remove from current selection\n          for (let i = 0; i < currentValues.length; i++) {\n            if (currentValues[i].id === optionObj.id) {\n              currentValues.splice(i, 1)\n            }\n          }\n\n          const beforeOnchange = this.main.beforeOnChange(currentValues)\n          if (beforeOnchange !== false) { shouldUpdate = true }\n        }\n\n        if (shouldUpdate) {\n          this.main.data.removeFromSelected((optionObj.id as any), 'id')\n          this.main.render()\n          this.main.select.setValue()\n          this.main.data.onDataChange() // Trigger on change callback\n        }\n      }\n\n\n      value.appendChild(deleteSpan)\n    }\n\n    return value\n  }\n\n  // Create content container\n  public contentDiv(): HTMLDivElement {\n    const container = document.createElement('div')\n    container.classList.add(this.main.config.content)\n    return container\n  }\n\n  public searchDiv(): Search {\n    const container = document.createElement('div')\n    const input = document.createElement('input')\n    const addable = document.createElement('div')\n    container.classList.add(this.main.config.search)\n\n    // Setup search return object\n    const searchReturn: Search = {\n      container,\n      input\n    }\n\n    // We still want the search to be tabable but not shown\n    if (!this.main.config.showSearch) {\n      container.classList.add(this.main.config.hide)\n      input.readOnly = true\n    }\n\n    input.type = 'search'\n    input.placeholder = this.main.config.searchPlaceholder\n    input.tabIndex = 0\n    input.setAttribute('aria-label', this.main.config.searchPlaceholder)\n    input.setAttribute('autocapitalize', 'off')\n    input.setAttribute('autocomplete', 'off')\n    input.setAttribute('autocorrect', 'off')\n    input.onclick = (e) => {\n      setTimeout(() => {\n        const target = e.target as HTMLInputElement\n        if (target.value === '') { this.main.search('') }\n      }, 10)\n    }\n    input.onkeydown = (e) => {\n      if (e.key === 'ArrowUp') {\n        this.main.open()\n        this.highlightUp()\n        e.preventDefault()\n      } else if (e.key === 'ArrowDown') {\n        this.main.open()\n        this.highlightDown()\n        e.preventDefault()\n      } else if (e.key === 'Tab') {\n        if (!this.main.data.contentOpen) {\n          setTimeout(() => { this.main.close() }, this.main.config.timeoutDelay)\n        } else {\n          this.main.close()\n        }\n      } else if (e.key === 'Enter') {\n        e.preventDefault()\n      }\n    }\n    input.onkeyup = (e) => {\n      const target = e.target as HTMLInputElement\n      if (e.key === 'Enter') {\n        if (this.main.addable && e.ctrlKey) {\n          addable.click()\n          e.preventDefault()\n          e.stopPropagation()\n          return\n        }\n        const highlighted = this.list.querySelector('.' + this.main.config.highlighted) as HTMLDivElement\n        if (highlighted) { highlighted.click() }\n      } else if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n        // Cancel out to leave for onkeydown to handle\n      } else if (e.key === 'Escape') {\n        this.main.close()\n      } else {\n        if (this.main.config.showSearch && this.main.data.contentOpen) {\n          this.main.search(target.value)\n        } else {\n          input.value = ''\n        }\n      }\n      e.preventDefault()\n      e.stopPropagation()\n    }\n    input.onfocus = () => { this.main.open() }\n    container.appendChild(input)\n\n    if (this.main.addable) {\n      addable.classList.add(this.main.config.addable)\n      addable.innerHTML = '+'\n      addable.onclick = (e) => {\n        if (this.main.addable) {\n          e.preventDefault()\n          e.stopPropagation()\n\n          const inputValue = this.search.input.value\n          if (inputValue.trim() === '') { this.search.input.focus(); return }\n\n          const addableValue = this.main.addable(inputValue)\n          let addableValueStr = ''\n          if (!addableValue) { return }\n\n          if (typeof addableValue === 'object') {\n            const validValue = validateOption(addableValue)\n            if (validValue) {\n              this.main.addData(addableValue)\n              addableValueStr = (addableValue.value ? addableValue.value : addableValue.text)\n            }\n          } else {\n            this.main.addData(this.main.data.newOption({\n              text: addableValue,\n              value: addableValue\n            }))\n            addableValueStr = addableValue\n          }\n\n          this.main.search('')\n          setTimeout(() => { // Temp fix to solve multi render issue\n            this.main.set(addableValueStr, 'value', false, false)\n          }, 100)\n\n          // Close it only if closeOnSelect = true\n          if (this.main.config.closeOnSelect) {\n            setTimeout(() => { // Give it a little padding for a better looking animation\n              this.main.close()\n            }, 100)\n          }\n        }\n      }\n      container.appendChild(addable)\n\n      searchReturn.addable = addable\n    }\n\n    return searchReturn\n  }\n\n  public highlightUp(): void {\n    const highlighted = this.list.querySelector('.' + this.main.config.highlighted) as HTMLDivElement\n    let prev: HTMLDivElement | null = null\n    if (highlighted) {\n      prev = highlighted.previousSibling as HTMLDivElement\n      while (prev !== null) {\n        if (prev.classList.contains(this.main.config.disabled)) {\n          prev = prev.previousSibling as HTMLDivElement\n          continue\n        } else {\n          break\n        }\n      }\n    } else {\n      const allOptions = this.list.querySelectorAll('.' + this.main.config.option + ':not(.' + this.main.config.disabled + ')')\n      prev = allOptions[allOptions.length - 1] as HTMLDivElement\n    }\n\n    // Do not select if optgroup label\n    if (prev && prev.classList.contains(this.main.config.optgroupLabel)) { prev = null }\n\n    // Check if parent is optgroup\n    if (prev === null) {\n      const parent = highlighted.parentNode as HTMLDivElement\n      if (parent.classList.contains(this.main.config.optgroup)) {\n        if (parent.previousSibling) {\n          const prevNodes = (parent.previousSibling as HTMLDivElement).querySelectorAll('.' + this.main.config.option + ':not(.' + this.main.config.disabled + ')')\n          if (prevNodes.length) {\n            prev = prevNodes[prevNodes.length - 1] as HTMLDivElement\n          }\n        }\n      }\n    }\n\n    // If previous element exists highlight it\n    if (prev) {\n      if (highlighted) { highlighted.classList.remove(this.main.config.highlighted) }\n      prev.classList.add(this.main.config.highlighted)\n      ensureElementInView(this.list, prev)\n    }\n  }\n\n  public highlightDown(): void {\n    const highlighted = this.list.querySelector('.' + this.main.config.highlighted) as HTMLDivElement\n    let next = null\n\n    if (highlighted) {\n      next = highlighted.nextSibling as HTMLDivElement\n      while (next !== null) {\n        if (next.classList.contains(this.main.config.disabled)) {\n          next = next.nextSibling as HTMLDivElement\n          continue\n        } else {\n          break\n        }\n      }\n    } else {\n      next = this.list.querySelector('.' + this.main.config.option + ':not(.' + this.main.config.disabled + ')') as HTMLDivElement\n    }\n\n    // Check if parent is optgroup\n    if (next === null && highlighted !== null) {\n      const parent = highlighted.parentNode as HTMLDivElement\n      if (parent.classList.contains(this.main.config.optgroup)) {\n        if (parent.nextSibling) {\n          const sibling = parent.nextSibling as HTMLDivElement\n          next = sibling.querySelector('.' + this.main.config.option + ':not(.' + this.main.config.disabled + ')') as HTMLDivElement\n        }\n      }\n    }\n\n    // If previous element exists highlight it\n    if (next) {\n      if (highlighted) { highlighted.classList.remove(this.main.config.highlighted) }\n      next.classList.add(this.main.config.highlighted)\n      ensureElementInView(this.list, next)\n    }\n  }\n\n  // Create main container that options will reside\n  public listDiv(): HTMLDivElement {\n    const list = document.createElement('div')\n    list.classList.add(this.main.config.list)\n    list.setAttribute('role', 'listbox')\n    // @todo Link to?\n    // list.setAttribute('aria-labelledby', '')\n    return list\n  }\n\n  // Loop through data || filtered data and build options and append to list container\n  public options(content: string = ''): void {\n    const data = this.main.data.filtered || this.main.data.data\n\n    // Clear out innerHtml\n    this.list.innerHTML = ''\n\n    // If content is being passed just use that text\n    if (content !== '') {\n      const searching = document.createElement('div')\n      searching.classList.add(this.main.config.option)\n      searching.classList.add(this.main.config.disabled)\n      searching.innerHTML = content\n      this.list.appendChild(searching)\n      return\n    }\n\n    // If ajax and isSearching\n    if (this.main.config.isAjax && this.main.config.isSearching) {\n      const searching = document.createElement('div')\n      searching.classList.add(this.main.config.option)\n      searching.classList.add(this.main.config.disabled)\n      searching.innerHTML = this.main.config.searchingText\n      this.list.appendChild(searching)\n      return\n    }\n\n    // If no results show no results text\n    if (data.length === 0) {\n      const noResults = document.createElement('div')\n      noResults.classList.add(this.main.config.option)\n      noResults.classList.add(this.main.config.disabled)\n      noResults.innerHTML = this.main.config.searchText\n      this.list.appendChild(noResults)\n      return\n    }\n\n    // Append individual options to div container\n    for (const d of data) {\n      // Create optgroup\n      if (d.hasOwnProperty('label')) {\n        const item = d as Optgroup\n        const optgroupEl = document.createElement('div')\n        optgroupEl.classList.add(this.main.config.optgroup)\n\n        // Create label\n        const optgroupLabel = document.createElement('div')\n        optgroupLabel.classList.add(this.main.config.optgroupLabel)\n        if (this.main.config.selectByGroup && this.main.config.isMultiple) {\n          optgroupLabel.classList.add(this.main.config.optgroupLabelSelectable)\n        }\n        optgroupLabel.innerHTML = item.label\n        optgroupEl.appendChild(optgroupLabel)\n\n        const options = item.options\n        if (options) {\n          for (const o of options) {\n            optgroupEl.appendChild(this.option(o))\n          }\n\n          // Selecting all values by clicking the group label\n          if (this.main.config.selectByGroup && this.main.config.isMultiple) {\n            const master = this\n            optgroupLabel.addEventListener('click', (e: MouseEvent) => {\n              e.preventDefault()\n              e.stopPropagation()\n\n              for (const childEl of optgroupEl.children as any as HTMLDivElement[]) {\n                if (childEl.className.indexOf(master.main.config.option) !== -1) {\n                  childEl.click()\n                }\n              }\n            })\n          }\n        }\n        this.list.appendChild(optgroupEl)\n      } else {\n        this.list.appendChild(this.option(d as Option))\n      }\n    }\n  }\n\n  // Create single option\n  public option(data: Option): HTMLDivElement {\n    // Add hidden placeholder\n    if (data.placeholder) {\n      const placeholder = document.createElement('div')\n      placeholder.classList.add(this.main.config.option)\n      placeholder.classList.add(this.main.config.hide)\n      return placeholder\n    }\n\n    const optionEl = document.createElement('div')\n\n    // Add class to div element\n    optionEl.classList.add(this.main.config.option)\n    // Add WCAG attribute\n    optionEl.setAttribute('role', 'option')\n    if (data.class) {\n      data.class.split(' ').forEach((dataClass: string) => {\n        optionEl.classList.add(dataClass)\n      })\n    }\n\n    // Add style to div element\n    if (data.style) {\n      optionEl.style.cssText = data.style\n    }\n\n    const selected = this.main.data.getSelected() as Option\n\n    optionEl.dataset.id = data.id\n    if (this.main.config.searchHighlight && this.main.slim && data.innerHTML && this.main.slim.search.input.value.trim() !== '') {\n      optionEl.innerHTML = highlight(data.innerHTML, this.main.slim.search.input.value, this.main.config.searchHighlighter)\n    } else if (data.innerHTML) {\n      optionEl.innerHTML = data.innerHTML\n    }\n    if (this.main.config.showOptionTooltips && optionEl.textContent) {\n      optionEl.setAttribute('title', optionEl.textContent)\n    }\n    const master = this\n    optionEl.addEventListener('click', function(e: MouseEvent) {\n      e.preventDefault()\n      e.stopPropagation()\n\n      const element = this\n      const elementID = element.dataset.id\n\n      if (data.selected === true && master.main.config.allowDeselectOption) {\n        let shouldUpdate = false\n\n        // If no beforeOnChange is set automatically update at end\n        if (!master.main.beforeOnChange || !master.main.config.isMultiple) {shouldUpdate = true}\n\n        if (master.main.beforeOnChange && master.main.config.isMultiple) {\n          const selectedValues = master.main.data.getSelected() as Option\n          const currentValues = JSON.parse(JSON.stringify(selectedValues))\n\n          // Remove from current selection\n\n          for (let i = 0; i < currentValues.length; i++) {\n            if (currentValues[i].id === elementID) {\n              currentValues.splice(i, 1)\n            }\n          }\n\n          const beforeOnchange = master.main.beforeOnChange(currentValues)\n          if (beforeOnchange !== false) { shouldUpdate = true }\n        }\n\n        if (shouldUpdate) {\n          if (master.main.config.isMultiple) {\n            master.main.data.removeFromSelected((elementID as any), 'id')\n            master.main.render()\n            master.main.select.setValue()\n            master.main.data.onDataChange() // Trigger on change callback\n          } else {\n            master.main.set('')\n          }\n\n        }\n      } else {\n        // Check if option is disabled or is already selected, do nothing\n        if (data.disabled || data.selected) {\n          return\n        }\n\n        // Check if hit limit\n        if (master.main.config.limit && Array.isArray(selected) && master.main.config.limit <= selected.length) {\n          return\n        }\n\n        if (master.main.beforeOnChange) {\n          let value\n          const objectInfo = JSON.parse(JSON.stringify(master.main.data.getObjectFromData(elementID as string)))\n          objectInfo.selected = true\n\n          if (master.main.config.isMultiple) {\n            value = JSON.parse(JSON.stringify(selected))\n            value.push(objectInfo)\n          } else {\n            value = JSON.parse(JSON.stringify(objectInfo))\n          }\n\n          const beforeOnchange = master.main.beforeOnChange(value)\n          if (beforeOnchange !== false) {\n            master.main.set((elementID as string), 'id', master.main.config.closeOnSelect)\n          }\n        } else {\n          master.main.set((elementID as string), 'id', master.main.config.closeOnSelect)\n        }\n      }\n    })\n\n    const isSelected = selected && isValueInArrayOfObjects(selected, 'id', (data.id as string))\n    if (data.disabled || isSelected) {\n      optionEl.onclick = null\n      if (!master.main.config.allowDeselectOption) {\n        optionEl.classList.add(this.main.config.disabled)\n      }\n      if (master.main.config.hideSelectedOption) {\n        optionEl.classList.add(this.main.config.hide)\n      }\n    }\n\n    if (isSelected) {\n      optionEl.classList.add(this.main.config.optionSelected)\n    } else {\n      optionEl.classList.remove(this.main.config.optionSelected)\n    }\n\n    return optionEl\n  }\n}\n","import { Config } from './config'\nimport { Select } from './select'\nimport { Slim } from './slim'\nimport { Data, dataArray, Option, validateData } from './data'\nimport { hasClassInTree, putContent, debounce, ensureElementInView } from './helper'\n\ninterface Constructor {\n  select: string | Element\n  data?: dataArray\n  showSearch?: boolean\n  searchPlaceholder?: string\n  searchText?: string\n  searchingText?: string\n  searchFocus?: boolean\n  searchHighlight?: boolean\n  searchFilter?: (opt: Option, search: string) => boolean\n  closeOnSelect?: boolean\n  showContent?: string\n  placeholder?: string\n  allowDeselect?: boolean\n  allowDeselectOption?: boolean\n  hideSelectedOption?: boolean\n  deselectLabel?: string\n  isEnabled?: boolean\n  valuesUseText?: boolean // Use text value when showing selected value\n  showOptionTooltips?: boolean\n  selectByGroup?: boolean\n  limit?: number\n  timeoutDelay?: number\n  addToBody?: boolean\n\n  // Events\n  ajax?: (value: string, func: (info: any) => void) => void\n  addable?: (value: string) => Option | string\n  beforeOnChange?: (info: Option | Option[]) => void | boolean\n  onChange?: (info: Option | Option[]) => void\n  beforeOpen?: () => void\n  afterOpen?: () => void\n  beforeClose?: () => void\n  afterClose?: () => void\n}\n\nexport default class SlimSelect {\n  public config: Config\n  public select: Select\n  public data: Data\n  public slim: Slim\n  public ajax: ((value: string, func: (info: any) => void) => void) | null = null\n  public addable: ((value: string) => Option | string) | null = null\n  public beforeOnChange: ((info: Option) => void | boolean) | null = null\n  public onChange: ((info: Option) => void) | null = null\n  public beforeOpen: (() => void) | null = null\n  public afterOpen: (() => void) | null = null\n  public beforeClose: (() => void) | null = null\n  public afterClose: (() => void) | null = null\n\n  private windowScroll: (e: Event) => void = debounce((e: Event) => {\n    if (this.data.contentOpen) {\n      if (putContent(this.slim.content, this.data.contentPosition, this.data.contentOpen) === 'above') {\n        this.moveContentAbove()\n      } else {\n        this.moveContentBelow()\n      }\n    }\n  })\n\n  constructor(info: Constructor) {\n    const selectElement = this.validate(info)\n\n    // If select already has a slim select id on it lets destroy it first\n    if (selectElement.dataset.ssid) { this.destroy(selectElement.dataset.ssid) }\n\n    // Set ajax function if passed in\n    if (info.ajax) { this.ajax = info.ajax }\n\n    // Add addable if option is passed in\n    if (info.addable) { this.addable = info.addable }\n\n    this.config = new Config({\n      select: selectElement,\n      isAjax: (info.ajax ? true : false),\n      showSearch: info.showSearch,\n      searchPlaceholder: info.searchPlaceholder,\n      searchText: info.searchText,\n      searchingText: info.searchingText,\n      searchFocus: info.searchFocus,\n      searchHighlight: info.searchHighlight,\n      searchFilter: info.searchFilter,\n      closeOnSelect: info.closeOnSelect,\n      showContent: info.showContent,\n      placeholderText: info.placeholder,\n      allowDeselect: info.allowDeselect,\n      allowDeselectOption: info.allowDeselectOption,\n      hideSelectedOption: info.hideSelectedOption,\n      deselectLabel: info.deselectLabel,\n      isEnabled: info.isEnabled,\n      valuesUseText: info.valuesUseText,\n      showOptionTooltips: info.showOptionTooltips,\n      selectByGroup: info.selectByGroup,\n      limit: info.limit,\n      timeoutDelay: info.timeoutDelay,\n      addToBody: info.addToBody\n    })\n\n    this.select = new Select({\n      select: selectElement,\n      main: this\n    })\n\n    this.data = new Data({ main: this })\n    this.slim = new Slim({ main: this })\n\n    // Add after original select element\n    if (this.select.element.parentNode) {\n      this.select.element.parentNode.insertBefore(this.slim.container, this.select.element.nextSibling)\n    }\n\n    // If data is passed in lets set it\n    // and thus will start the render\n    if (info.data) {\n      this.setData(info.data)\n    } else {\n      // Do an initial render on startup\n      this.render()\n    }\n\n    // Add onclick listener to document to closeContent if clicked outside\n    document.addEventListener('click', this.documentClick)\n\n    // If the user wants to show the content forcibly on a specific side,\n    // there is no need to listen for scroll events\n    if (this.config.showContent === 'auto') {\n      window.addEventListener('scroll', this.windowScroll, false)\n    }\n\n    // Add event callbacks after everthing has been created\n    if (info.beforeOnChange) { this.beforeOnChange = info.beforeOnChange }\n    if (info.onChange) { this.onChange = info.onChange }\n    if (info.beforeOpen) { this.beforeOpen = info.beforeOpen }\n    if (info.afterOpen) { this.afterOpen = info.afterOpen }\n    if (info.beforeClose) { this.beforeClose = info.beforeClose }\n    if (info.afterClose) { this.afterClose = info.afterClose }\n\n    // If disabled lets call it\n    if (!this.config.isEnabled) { this.disable() }\n  }\n\n  public validate(info: Constructor) {\n    const select = (typeof info.select === 'string' ? document.querySelector(info.select) : info.select) as HTMLSelectElement\n    if (!select) { throw new Error('Could not find select element') }\n    if (select.tagName !== 'SELECT') { throw new Error('Element isnt of type select') }\n    return select\n  }\n\n  public selected(): string | string[] {\n    if (this.config.isMultiple) {\n      const selected = this.data.getSelected() as Option[]\n      const outputSelected: string[] = []\n      for (const s of selected) {\n        outputSelected.push(s.value as string)\n      }\n      return outputSelected\n    } else {\n      const selected = this.data.getSelected() as Option\n      return (selected ? selected.value as string : '')\n    }\n  }\n\n  // Sets value of the select, adds it to data and original select\n  public set(value: string | string[], type: string = 'value', close: boolean = true, render: boolean = true) {\n    if (this.config.isMultiple && !Array.isArray(value)) {\n      this.data.addToSelected(value, type)\n    } else {\n      this.data.setSelected(value, type)\n    }\n    this.select.setValue()\n    this.data.onDataChange() // Trigger on change callback\n    this.render()\n\n    // Close when all options are selected and hidden\n    if (this.config.hideSelectedOption && this.config.isMultiple && (this.data.getSelected() as Option[]).length === this.data.data.length) {\n      close = true\n    }\n\n    if (close) { this.close() }\n  }\n\n  // setSelected is just mapped to the set method\n  public setSelected(value: string | string[], type: string = 'value', close: boolean = true, render: boolean = true) {\n    this.set(value, type, close, render)\n  }\n\n  public setData(data: dataArray) {\n    // Validate data if passed in\n    const isValid = validateData(data)\n    if (!isValid) { console.error('Validation problem on: #' + this.select.element.id); return } // If data passed in is not valid DO NOT parse, set and render\n\n    const newData = JSON.parse(JSON.stringify(data))\n    const selected = this.data.getSelected()\n\n    // Check newData to make sure value is set\n    // If not set from text\n    for (let i = 0; i < newData.length; i++) {\n      if (!newData[i].value && !newData[i].placeholder) {\n        newData[i].value = newData[i].text\n      }\n    }\n\n    // If its an ajax type keep selected values\n    if (this.config.isAjax && selected) {\n      if (this.config.isMultiple) {\n        const reverseSelected = (selected as Option[]).reverse()\n        for (const r of reverseSelected) {\n          newData.unshift(r)\n        }\n      } else {\n        newData.unshift(selected)\n\n        // Look for duplicate selected if so remove it\n        for (let i = 0; i < newData.length; i++) {\n          if (!newData[i].placeholder && newData[i].value === (selected as Option).value && newData[i].text === (selected as Option).text) {\n            newData.splice(i, 1)\n          }\n        }\n\n        // Add placeholder if it doesnt already have one\n        let hasPlaceholder = false\n        for (let i = 0; i < newData.length; i++) {\n          if (newData[i].placeholder) {\n            hasPlaceholder = true\n          }\n        }\n        if (!hasPlaceholder) {\n          newData.unshift({ text: '', placeholder: true })\n        }\n      }\n    }\n\n    this.select.create(newData)\n    this.data.parseSelectData()\n    this.data.setSelectedFromSelect()\n  }\n\n  // addData will append to the current data set\n  public addData(data: Option) {\n    // Validate data if passed in\n    const isValid = validateData([data])\n    if (!isValid) { console.error('Validation problem on: #' + this.select.element.id); return } // If data passed in is not valid DO NOT parse, set and render\n\n    this.data.add(this.data.newOption(data))\n    this.select.create(this.data.data)\n    this.data.parseSelectData()\n    this.data.setSelectedFromSelect()\n    this.render()\n  }\n\n  // Open content section\n  public open(): void {\n    // Dont open if disabled\n    if (!this.config.isEnabled) { return }\n\n    // Dont do anything if the content is already open\n    if (this.data.contentOpen) { return }\n\n    // Dont open when all options are selected and hidden\n    if (this.config.hideSelectedOption && this.config.isMultiple && (this.data.getSelected() as Option[]).length === this.data.data.length) { return }\n\n    // Run beforeOpen callback\n    if (this.beforeOpen) { this.beforeOpen() }\n\n    if (this.config.isMultiple && this.slim.multiSelected) {\n      this.slim.multiSelected.plus.classList.add('ss-cross')\n    } else if (this.slim.singleSelected) {\n      this.slim.singleSelected.arrowIcon.arrow.classList.remove('arrow-down')\n      this.slim.singleSelected.arrowIcon.arrow.classList.add('arrow-up')\n    }\n    (this.slim as any)[(this.config.isMultiple ? 'multiSelected' : 'singleSelected')].container.classList.add((this.data.contentPosition === 'above' ? this.config.openAbove : this.config.openBelow))\n\n    if (this.config.addToBody) {\n      // move the content in to the right location\n      const containerRect = this.slim.container.getBoundingClientRect()\n      this.slim.content.style.top = (containerRect.top + containerRect.height + window.scrollY) + 'px'\n      this.slim.content.style.left = (containerRect.left + window.scrollX) + 'px'\n      this.slim.content.style.width = containerRect.width + 'px'\n    }\n    this.slim.content.classList.add(this.config.open)\n\n    // Check showContent to see if they want to specifically show in a certain direction\n    if (this.config.showContent.toLowerCase() === 'up') {\n      this.moveContentAbove()\n    } else if (this.config.showContent.toLowerCase() === 'down') {\n      this.moveContentBelow()\n    } else {\n      // Auto identify where to put it\n      if (putContent(this.slim.content, this.data.contentPosition, this.data.contentOpen) === 'above') {\n        this.moveContentAbove()\n      } else {\n        this.moveContentBelow()\n      }\n    }\n\n    // Move to selected option for single option\n    if (!this.config.isMultiple) {\n      const selected = this.data.getSelected() as Option\n      if (selected) {\n        const selectedId = selected.id\n        const selectedOption = this.slim.list.querySelector('[data-id=\"' + selectedId + '\"]') as HTMLElement\n        if (selectedOption) {\n          ensureElementInView(this.slim.list, selectedOption)\n        }\n      }\n    }\n\n    // setTimeout is for animation completion\n    setTimeout(() => {\n      this.data.contentOpen = true\n\n      // Focus on input field\n      if (this.config.searchFocus) {\n        this.slim.search.input.focus()\n      }\n\n      // Run afterOpen callback\n      if (this.afterOpen) {\n        this.afterOpen()\n      }\n    }, this.config.timeoutDelay)\n  }\n\n  // Close content section\n  public close(): void {\n    // Dont do anything if the content is already closed\n    if (!this.data.contentOpen) { return }\n\n    // Run beforeClose calback\n    if (this.beforeClose) { this.beforeClose() }\n\n    // this.slim.search.input.blur() // Removed due to safari quirk\n    if (this.config.isMultiple && this.slim.multiSelected) {\n      this.slim.multiSelected.container.classList.remove(this.config.openAbove)\n      this.slim.multiSelected.container.classList.remove(this.config.openBelow)\n      this.slim.multiSelected.plus.classList.remove('ss-cross')\n    } else if (this.slim.singleSelected) {\n      this.slim.singleSelected.container.classList.remove(this.config.openAbove)\n      this.slim.singleSelected.container.classList.remove(this.config.openBelow)\n      this.slim.singleSelected.arrowIcon.arrow.classList.add('arrow-down')\n      this.slim.singleSelected.arrowIcon.arrow.classList.remove('arrow-up')\n    }\n    this.slim.content.classList.remove(this.config.open)\n    this.data.contentOpen = false\n\n    this.search('') // Clear search\n\n    // Reset the content below\n    setTimeout(() => {\n      this.slim.content.removeAttribute('style')\n      this.data.contentPosition = 'below'\n\n      if (this.config.isMultiple && this.slim.multiSelected) {\n        this.slim.multiSelected.container.classList.remove(this.config.openAbove)\n        this.slim.multiSelected.container.classList.remove(this.config.openBelow)\n      } else if (this.slim.singleSelected) {\n        this.slim.singleSelected.container.classList.remove(this.config.openAbove)\n        this.slim.singleSelected.container.classList.remove(this.config.openBelow)\n      }\n\n      // After content is closed lets blur on the input field\n      this.slim.search.input.blur()\n\n      // Run afterClose callback\n      if (this.afterClose) { this.afterClose() }\n    }, this.config.timeoutDelay)\n  }\n\n  public moveContentAbove(): void {\n    let selectHeight: number = 0\n    if (this.config.isMultiple && this.slim.multiSelected) {\n      selectHeight = this.slim.multiSelected.container.offsetHeight\n    } else if (this.slim.singleSelected) {\n      selectHeight = this.slim.singleSelected.container.offsetHeight\n    }\n    const contentHeight = this.slim.content.offsetHeight\n    const height = selectHeight + contentHeight - 1\n    this.slim.content.style.margin = '-' + height + 'px 0 0 0'\n    this.slim.content.style.height = (height - selectHeight + 1) + 'px'\n    this.slim.content.style.transformOrigin = 'center bottom'\n    this.data.contentPosition = 'above'\n\n    if (this.config.isMultiple && this.slim.multiSelected) {\n      this.slim.multiSelected.container.classList.remove(this.config.openBelow)\n      this.slim.multiSelected.container.classList.add(this.config.openAbove)\n    } else if (this.slim.singleSelected) {\n      this.slim.singleSelected.container.classList.remove(this.config.openBelow)\n      this.slim.singleSelected.container.classList.add(this.config.openAbove)\n    }\n  }\n\n  public moveContentBelow(): void {\n    this.data.contentPosition = 'below'\n\n    if (this.config.isMultiple && this.slim.multiSelected) {\n      this.slim.multiSelected.container.classList.remove(this.config.openAbove)\n      this.slim.multiSelected.container.classList.add(this.config.openBelow)\n    } else if (this.slim.singleSelected) {\n      this.slim.singleSelected.container.classList.remove(this.config.openAbove)\n      this.slim.singleSelected.container.classList.add(this.config.openBelow)\n    }\n  }\n\n  // Set to enabled, remove disabled classes and removed disabled from original select\n  public enable(): void {\n    this.config.isEnabled = true\n    if (this.config.isMultiple && this.slim.multiSelected) {\n      this.slim.multiSelected.container.classList.remove(this.config.disabled)\n    } else if (this.slim.singleSelected) {\n      this.slim.singleSelected.container.classList.remove(this.config.disabled)\n    }\n\n    // Disable original select but dont trigger observer\n    this.select.triggerMutationObserver = false\n    this.select.element.disabled = false\n    this.slim.search.input.disabled = false\n    this.select.triggerMutationObserver = true\n  }\n\n  // Set to disabled, add disabled classes and add disabled to original select\n  public disable(): void {\n    this.config.isEnabled = false\n    if (this.config.isMultiple && this.slim.multiSelected) {\n      this.slim.multiSelected.container.classList.add(this.config.disabled)\n    } else if (this.slim.singleSelected) {\n      this.slim.singleSelected.container.classList.add(this.config.disabled)\n    }\n\n    // Enable original select but dont trigger observer\n    this.select.triggerMutationObserver = false\n    this.select.element.disabled = true\n    this.slim.search.input.disabled = true\n    this.select.triggerMutationObserver = true\n  }\n\n  // Take in string value and search current options\n  public search(value: string): void {\n    // Only filter data and rerender if value has changed\n    if (this.data.searchValue === value) { return }\n\n    this.slim.search.input.value = value\n    if (this.config.isAjax) {\n      const master = this\n      this.config.isSearching = true\n      this.render()\n\n      // If ajax call it\n      if (this.ajax) {\n        this.ajax(value, (info: any) => {\n          // Only process if return callback is not false\n          master.config.isSearching = false\n          if (Array.isArray(info)) {\n            info.unshift({ text: '', placeholder: true })\n            master.setData(info)\n            master.data.search(value)\n            master.render()\n          } else if (typeof info === 'string') {\n            master.slim.options(info)\n          } else {\n            master.render()\n          }\n        })\n      }\n    } else {\n      this.data.search(value)\n      this.render()\n    }\n  }\n\n  public setSearchText(text: string): void {\n    this.config.searchText = text\n  }\n\n  public render(): void {\n    if (this.config.isMultiple) {\n      this.slim.values()\n    } else {\n      this.slim.placeholder()\n      this.slim.deselect()\n    }\n    this.slim.options()\n  }\n\n  // Display original select again and remove slim\n  public destroy(id: string | null = null): void {\n    const slim = (id ? document.querySelector('.' + id + '.ss-main') : this.slim.container)\n    const select = (id ? document.querySelector(`[data-ssid=${id}]`) as HTMLSelectElement : this.select.element)\n    // If there is no slim dont do anything\n    if (!slim || !select) { return }\n\n\n    document.removeEventListener('click', this.documentClick)\n\n    if (this.config.showContent === 'auto') {\n      window.removeEventListener('scroll', this.windowScroll, false)\n    }\n\n    // Show original select\n    select.style.display = ''\n    delete select.dataset.ssid\n\n    // Remove slim from original select dropdown\n    const el = select as any\n    el.slim = null\n\n    // Remove slim select\n    if (slim.parentElement) {\n      slim.parentElement.removeChild(slim)\n    }\n\n    // remove the content if it was added to the document body\n    if (this.config.addToBody) {\n      const slimContent = (id ? document.querySelector('.' + id + '.ss-content') : this.slim.content)\n      if (!slimContent) { return }\n      document.body.removeChild(slimContent)\n    }\n  }\n\n  private documentClick: (e: Event) => void = (e: Event) => {\n    if (e.target && !hasClassInTree(e.target as HTMLElement, this.config.id)) {\n      this.close()\n    }\n  }\n\n}\n"],"names":["Config","info","this","id","isMultiple","isAjax","isSearching","showSearch","searchFocus","searchHighlight","closeOnSelect","showContent","searchPlaceholder","searchText","searchingText","placeholderText","allowDeselect","allowDeselectOption","hideSelectedOption","deselectLabel","isEnabled","valuesUseText","showOptionTooltips","selectByGroup","limit","timeoutDelay","addToBody","main","singleSelected","arrow","multiSelected","add","plus","values","value","valueText","valueDelete","content","open","openAbove","openBelow","search","searchHighlighter","addable","list","optgroup","optgroupLabel","optgroupLabelSelectable","option","optionSelected","highlighted","disabled","hide","Math","floor","random","style","select","cssText","className","split","multiple","searchFilter","prototype","opt","text","toLowerCase","indexOf","ensureElementInView","container","element","cTop","scrollTop","offsetTop","cBottom","clientHeight","eTop","eBottom","putContent","el","currentPosition","isOpen","height","offsetHeight","rect","getBoundingClientRect","elemTop","top","elemBottom","bottom","window","innerHeight","w","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","Select","triggerMutationObserver","config","addAttributes","addEventListeners","mutationObserver","addMutationObserver","slim","setValue","data","getSelected","selected","options_1","options","_i","length","o","selected_1","_a","isOnChangeEnabled","dispatchEvent","tabIndex","display","dataset","ssid","setAttribute","_this","addEventListener","e","setSelectedFromSelect","render","MutationObserver","mutations","parseSelectData","forEach","mutation","attributeName","updateContainerDivClass","observeMutationObserver","observe","attributes","childList","characterData","disconnectMutationObserver","disconnect","create","innerHTML","data_1","d","hasOwnProperty","optgroupObject","optgroupEl","createElement","label","_b","oo","appendChild","createOption","optionEl","placeholder","mandatory","optionClass","classList","Object","keys","key","str","result","replace","match","toUpperCase","substring","Data","contentOpen","contentPosition","searchValue","filtered","newOption","String","class","push","nodes_1","childNodes","n","nodeName","pullOptionData","trim","newSelected","options_2","getObjectFromData","setSelected","selectedIndex","type","options_3","shouldBeSelected","Array","isArray","value_1","v","options_4","addToSelected","s","removeFromSelected","selected_2","onDataChange","onChange","JSON","parse","stringify","_c","valuesArray","slice","map","obj","optgroupObj","filter","assign","validateData","console","error","errorCount","options_5","validateOption","Slim","containerDiv","contentDiv","searchDiv","listDiv","multiSelectedDiv","singleSelectedDiv","body","c","deselect","onclick","stopPropagation","set","arrowContainer","arrowIcon","close","outerHTML","selectedValue","remove","target","contains","exists","currentNodes","nodesToRemove","currentNodes_1","nodesToRemove_1","removeChild","currentNodes_2","HTMLElement","insertAdjacentElement","insertBefore","valueDiv","optionObj","deleteSpan","preventDefault","shouldUpdate","beforeOnChange","currentValues","i","splice","input","searchReturn","readOnly","setTimeout","onkeydown","highlightUp","highlightDown","onkeyup","ctrlKey","click","querySelector","onfocus","inputValue","focus","addableValue","addableValueStr_1","addData","prev","previousSibling","allOptions","querySelectorAll","parent_1","parentNode","prevNodes","next","nextSibling","parent_2","searching","noResults","item","optgroupEl_1","this_1","master_1","children","childEl","dataClass","completedString","regex","RegExp","matchStartPosition","index","matchEndPosition","toString","originalTextFoundByRegex","concat","highlight","textContent","master","elementID","selectedValues","objectInfo","isSelected","isValueInArrayOfObjects","SlimSelect","func","wait","immediate","timeout","ajax","beforeOpen","afterOpen","beforeClose","afterClose","windowScroll","moveContentAbove","moveContentBelow","args","arguments","context","self","later","apply","callNow","clearTimeout","documentClick","hasClass","parentByClass","hasClassInTree","selectElement","validate","destroy","setData","disable","Error","tagName","outputSelected","newData","reverseSelected_1","reverse","r","unshift","hasPlaceholder","containerRect","scrollY","left","scrollX","width","selectedId","selectedOption","removeAttribute","blur","selectHeight","margin","transformOrigin","enable","setSearchText","removeEventListener","parentElement","slimContent"],"mappings":"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"}