{"version":3,"file":"slimselect.umd.js","sources":["../src/src/slim-select/helper.ts","../src/src/slim-select/store.ts","../src/src/slim-select/render.ts","../src/src/slim-select/select.ts","../src/src/slim-select/settings.ts","../src/src/slim-select/index.ts"],"sourcesContent":["// Generate an 8 character random string\nexport function generateID(): string {\n  return Math.random().toString(36).substring(2, 10)\n}\n\nexport function hasClassInTree(element: HTMLElement, className: string) {\n  function hasClass(e: HTMLElement, c: string) {\n    // If the element has the class return element\n    if (c && e && e.classList && e.classList.contains(c)) {\n      return e\n    }\n\n    // If the element has a dataset id of the class return element\n    if (c && e && e.dataset && e.dataset.id && e.dataset.id === className) {\n      return e\n    }\n\n    return null\n  }\n\n  function parentByClass(e: any, c: string): any {\n    if (!e || e === (document as any)) {\n      return null\n    } else if (hasClass(e, c)) {\n      return e\n    } else {\n      return parentByClass(e.parentNode, c)\n    }\n  }\n\n  return hasClass(element, className) || parentByClass(element, className)\n}\n\nexport function debounce(func: (...params: any[]) => void, wait = 50, immediate = false): () => void {\n  let timeout: any\n  return function (this: any, ...args: any[]) {\n    const context = self\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(context, args)\n      }\n    }\n    const callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) {\n      func.apply(context, args)\n    }\n  }\n}\n\nexport function kebabCase(str: string) {\n  const result = str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match) => '-' + match.toLowerCase())\n  return str[0] === str[0].toUpperCase() ? result.substring(1) : result\n}\n","import { generateID } from './helper'\n\nexport type DataArray = DataObject[]\nexport type DataObject = Optgroup | Option\n\nexport type DataArrayPartial = DataObjectPartial[]\nexport type DataObjectPartial = OptgroupOptional | OptionOptional\n\nexport interface OptgroupOptional {\n  id?: string\n  label: string // Required\n  options?: OptionOptional[]\n}\n\nexport class Optgroup {\n  public id: string\n  public label: string\n  public options: Option[]\n\n  constructor(optgroup: OptgroupOptional) {\n    this.id = !optgroup.id || optgroup.id === '' ? generateID() : optgroup.id\n    this.label = optgroup.label || ''\n\n    // If options exist, loop through options and create new option class\n    // and set the options to the optgroup options field\n    this.options = []\n    if (optgroup.options) {\n      for (const o of optgroup.options) {\n        this.options.push(new Option(o))\n      }\n    }\n  }\n}\n\nexport interface OptionOptional {\n  id?: string\n  value?: string\n  text: string // Required\n  html?: string\n  selected?: boolean\n  display?: boolean\n  disabled?: boolean\n  mandatory?: boolean\n  placeholder?: boolean\n  class?: string\n  style?: string\n  data?: { [key: string]: string }\n}\n\nexport class Option {\n  id: string\n  value: string\n  text: string\n  html: string\n  selected: boolean\n  display: boolean\n  disabled: boolean\n  placeholder: boolean\n  class: string\n  style: string\n  data: { [key: string]: string }\n  mandatory: boolean\n\n  constructor(option: OptionOptional) {\n    this.id = !option.id || option.id === '' ? generateID() : option.id\n    this.value = option.value || ''\n    this.text = option.text || ''\n    this.html = option.html || ''\n    this.selected = option.selected !== undefined ? option.selected : false\n    this.display = option.display !== undefined ? option.display : true\n    this.disabled = option.disabled !== undefined ? option.disabled : false\n    this.mandatory = option.mandatory !== undefined ? option.mandatory : false\n    this.placeholder = option.placeholder !== undefined ? option.placeholder : false\n    this.class = option.class || ''\n    this.style = option.style || ''\n    this.data = option.data || {}\n\n    // If no value is set, set the value to the text\n    if (!this.value) {\n      this.value = this.text\n    }\n  }\n}\n\nexport default class Store {\n  private data: DataArray = []\n\n  constructor(data: DataArrayPartial) {\n    this.setData(data)\n  }\n\n  public partialToFullData(data: DataArrayPartial): DataArray {\n    let dataFinal: DataArray = []\n    data.forEach((dataObj: DataObject | DataObjectPartial) => {\n      // Optgroup\n      if (dataObj instanceof Optgroup || 'label' in dataObj) {\n        let optOptions: Option[] = []\n        if ('options' in dataObj && dataObj.options) {\n          dataObj.options.forEach((option: Option | OptionOptional) => {\n            optOptions.push(new Option(option))\n          })\n        }\n\n        if (optOptions.length > 0) {\n          dataFinal.push(new Optgroup(dataObj))\n        }\n      }\n\n      // Option\n      if (dataObj instanceof Option || 'text' in dataObj) {\n        dataFinal.push(new Option(dataObj))\n      }\n    })\n\n    return dataFinal\n  }\n\n  public setData(data: DataArray | DataArrayPartial) {\n    this.data = this.partialToFullData(data)\n  }\n\n  // Get data will return all the data\n  public getData(): DataArray {\n    return this.filter(null, true)\n  }\n\n  // Get data options will return the data as a\n  // flat array of just options\n  public getDataOptions(): Option[] {\n    return this.filter(null, false) as Option[]\n  }\n\n  public addOption(option: OptionOptional) {\n    this.data.push(new Option(option))\n  }\n\n  // Pass in an array of id that will loop through\n  // each option and set the selected property to true\n  public setSelectedBy(selectedType: 'id' | 'value', selectedVals: string[]) {\n    for (let dataObj of this.data) {\n      // Optgroup\n      if (dataObj instanceof Optgroup) {\n        for (let option of dataObj.options) {\n          if (option[selectedType]) {\n            option.selected = selectedVals.includes(option[selectedType] as string)\n          }\n        }\n      }\n\n      // Option\n      if (dataObj instanceof Option) {\n        if (dataObj[selectedType]) {\n          dataObj.selected = selectedVals.includes(dataObj[selectedType] as string)\n        }\n      }\n    }\n  }\n\n  // Loop through each option and optgroup options\n  // and return an array of all the selected options\n  public getSelected(): DataArray {\n    return this.filter((opt: Option) => {\n      return opt.selected\n    }, true)\n  }\n\n  public getSelectedOptions(): Option[] {\n    return this.filter((opt: Option) => {\n      return opt.selected\n    }, false) as Option[]\n  }\n\n  public getSelectedIDs(): string[] {\n    let selectedOptions = this.getSelected()\n\n    let selectedIDs: string[] = []\n    selectedOptions.forEach((dataObj: DataObject) => {\n      if (dataObj instanceof Optgroup) {\n        dataObj.options.forEach((option: Option) => {\n          selectedIDs.push(option.id)\n        })\n      } else {\n        selectedIDs.push(dataObj.id)\n      }\n    })\n\n    return selectedIDs\n  }\n\n  public getSelectedValues(): string[] {\n    let selectedOptions = this.getSelectedOptions()\n    let selectedValues: string[] = []\n\n    // Loop through each option and get the value\n    selectedOptions.forEach((option: Option) => {\n      selectedValues.push(option.value)\n    })\n\n    return selectedValues\n  }\n\n  public getOptionByID(id: string): Option | null {\n    let options = this.filter((opt: Option) => {\n      return opt.id === id\n    }, false) as Option[]\n\n    return options.length ? options[0] : null\n  }\n\n  // Take in search string and return filtered list of values\n  public search(search: string, searchFilter?: (opt: Option, search: string) => boolean): DataArray {\n    search = search.trim()\n    if (search === '') {\n      return []\n    }\n\n    return this.filter((opt: Option): boolean => {\n      if (searchFilter) {\n        return searchFilter(opt, search)\n      }\n\n      // If the searchFilter is not set use default\n      return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1\n    }, true)\n  }\n\n  // Filter takes in a function that will be used to filter the data\n  // This will also keep optgroups of sub options meet the filter requirements\n  public filter(filter: { (opt: Option): boolean } | null, includeOptgroup: boolean): DataArray {\n    const dataSearch: DataArray = []\n    this.data.forEach((dataObj: DataObject) => {\n      // Optgroup\n      if (dataObj instanceof Optgroup) {\n        // If you dont want to include optgroups\n        if (!includeOptgroup) {\n          // Loop through each option and check if it meets the filter requirements\n          dataObj.options.forEach((option: Option) => {\n            if (filter && filter(option)) {\n              dataSearch.push(option)\n            }\n          })\n        } else {\n          let optOptions: Option[] = []\n          dataObj.options.forEach((option: Option) => {\n            if (!filter || filter(option)) {\n              optOptions.push(new Option(option))\n            }\n          })\n\n          if (optOptions.length > 0) {\n            dataSearch.push(new Optgroup({ id: dataObj.id, label: dataObj.label, options: optOptions }))\n          }\n        }\n      }\n\n      // Option\n      if (dataObj instanceof Option) {\n        if (!filter || filter(dataObj)) {\n          dataSearch.push(new Option(dataObj))\n        }\n      }\n    })\n\n    return dataSearch\n  }\n}\n","import { debounce } from './helper'\nimport Settings from './settings'\nimport Store, { DataArray, Optgroup, Option, OptionOptional } from './store'\n\nexport interface Callbacks {\n  open: () => void\n  close: () => void\n  addable?: (value: string) => OptionOptional | string\n  setSelected: (value: string[], close: boolean) => void\n  addOption: (option: Option) => void\n  search: (search: string) => void\n  beforeChange?: (newVal: Option[], oldVal: Option[]) => boolean | void\n  afterChange?: (newVal: Option[]) => void\n}\n\nexport interface Main {\n  main: HTMLDivElement\n  values: HTMLDivElement\n  deselect: {\n    main: HTMLDivElement\n    svg: SVGSVGElement\n    path: SVGPathElement\n  }\n  arrow: {\n    main: SVGSVGElement\n    path: SVGPathElement\n  }\n}\n\nexport interface Content {\n  main: HTMLDivElement\n  search: Search\n  list: HTMLDivElement\n}\n\nexport interface Search {\n  main: HTMLDivElement\n  input: HTMLInputElement\n  addable?: {\n    main: HTMLDivElement\n    svg: SVGSVGElement\n    path: SVGPathElement\n  }\n}\n\nexport default class Render {\n  public settings: Settings\n  public store: Store\n  public callbacks: Callbacks\n\n  // Elements\n  public main: Main\n  public content: Content\n\n  // Classes\n  public classes = {\n    // Main\n    main: 'ss-main',\n    openAbove: 'ss-open-above',\n    openBelow: 'ss-open-below',\n\n    // Placeholder\n    placeholder: 'ss-placeholder',\n\n    // Values\n    values: 'ss-values',\n    single: 'ss-single',\n    value: 'ss-value',\n    valueText: 'ss-value-text',\n    valueDelete: 'ss-value-delete',\n    valueOut: 'ss-value-out',\n\n    // Deselect\n    deselect: 'ss-deselect',\n    deselectPath: 'M10,10 L90,90 M10,90 L90,10', // Not a class but whatever\n\n    // Arrow\n    arrow: 'ss-arrow',\n    arrowClose: 'M10,30 L50,70 L90,30', // Not a class but whatever\n    arrowOpen: 'M10,70 L50,30 L90,70', // Not a class but whatever\n\n    // Content\n    content: 'ss-content',\n    open: 'ss-open',\n\n    // Search\n    search: 'ss-search',\n    searchHighlighter: 'ss-search-highlight',\n    searching: 'ss-searching',\n    addable: 'ss-addable',\n    addablePath: 'M50,10 L50,90 M10,50 L90,50', // Not a class but whatever\n\n    // List options\n    list: 'ss-list',\n    optgroup: 'ss-optgroup',\n    optgroupLabel: 'ss-optgroup-label',\n    optgroupSelectable: 'ss-optgroup-selectable',\n    option: 'ss-option',\n    optionSelected: 'ss-option-selected',\n    optionDelete: 'M10,10 L90,90 M10,90 L90,10', // Not a class but whatever\n    highlighted: 'ss-highlighted',\n\n    // Misc\n    error: 'ss-error',\n    disabled: 'ss-disabled',\n    hide: 'ss-hide',\n  }\n\n  constructor(settings: Required<Settings>, store: Store, callbacks: Callbacks) {\n    this.store = store\n    this.settings = settings\n    this.callbacks = callbacks\n\n    this.main = this.mainDiv()\n    this.content = this.contentDiv()\n\n    // Render the values\n    this.renderValues()\n\n    // Render the options\n    this.renderOptions(this.store.getData())\n\n    // Add content to the content location settings\n    this.settings.contentLocation.appendChild(this.content.main)\n  }\n\n  // Remove disabled classes\n  public enable(): void {\n    // Remove disabled class\n    this.main.main.classList.remove(this.classes.disabled)\n\n    // Set search input to \"enabled\"\n    this.content.search.input.disabled = false\n  }\n\n  // Set disabled classes\n  public disable(): void {\n    // Add disabled class\n    this.main.main.classList.add(this.classes.disabled)\n\n    // Set search input to disabled\n    this.content.search.input.disabled = true\n  }\n\n  public open(): void {\n    this.main.arrow.path.setAttribute('d', this.classes.arrowOpen)\n\n    // Add class to main container\n    this.main.main.classList.add(\n      this.settings.contentPosition === 'up' ? this.classes.openAbove : this.classes.openBelow,\n    )\n\n    // move the content in to the right location\n    this.moveContent()\n    this.content.main.classList.add(this.classes.open)\n\n    // Render the options\n    this.renderOptions(this.store.getData())\n\n    // Check showContent to see if they want to specifically show in a certain direction\n    if (this.settings.contentPosition.toLowerCase() === 'up') {\n      this.moveContentAbove()\n    } else if (this.settings.contentPosition.toLowerCase() === 'down') {\n      this.moveContentBelow()\n    } else {\n      // Auto identify where to put it\n      if (this.putContent(this.content.main, this.settings.isOpen) === 'up') {\n        this.moveContentAbove()\n      } else {\n        this.moveContentBelow()\n      }\n    }\n\n    // Move to last selected option\n    const selectedOptions = this.store.getSelectedOptions()\n    if (selectedOptions.length) {\n      const selectedId = selectedOptions[selectedOptions.length - 1].id\n      const selectedOption = this.content.list.querySelector('[data-id=\"' + selectedId + '\"]') as HTMLElement\n      if (selectedOption) {\n        this.ensureElementInView(this.content.list, selectedOption)\n      }\n    }\n  }\n\n  public close(): void {\n    this.main.main.classList.remove(this.classes.openAbove)\n    this.main.main.classList.remove(this.classes.openBelow)\n    this.main.arrow.path.setAttribute('d', this.classes.arrowClose)\n    this.content.main.classList.remove(this.classes.open)\n  }\n\n  public mainDiv(): Main {\n    // Create main container\n    const main = document.createElement('div')\n\n    // Set tabable to allow tabbing to the element\n    main.tabIndex = 0\n\n    // Add style and classes\n    main.style.cssText = this.settings.style !== '' ? this.settings.style : ''\n\n    // Clear out classlist\n    main.className = ''\n\n    // Loop through config class and add\n    main.classList.add(this.settings.id)\n    main.classList.add(this.classes.main)\n    if (this.settings.class) {\n      for (const c of this.settings.class) {\n        if (c.trim() !== '') {\n          main.classList.add(c.trim())\n        }\n      }\n    }\n\n    // If main gets focus, open the content\n    main.onfocus = () => {\n      if (!this.settings.isTabbing) {\n        this.callbacks.open()\n      }\n    }\n\n    // Deal with keyboard events on the main div\n    // This is to allow for normal selecting\n    // when you may not have a search bar\n    main.onkeydown = (e: KeyboardEvent) => {\n      // Convert above if else statemets to switch\n      switch (e.key) {\n        case 'ArrowUp':\n        case 'ArrowDown':\n          this.callbacks.open()\n          e.key === 'ArrowDown' ? this.highlightDown() : this.highlightUp()\n          return false\n        case 'Tab':\n          this.callbacks.close()\n          return true // Continue doing normal tabbing\n        case 'Enter':\n          const highlighted = this.content.list.querySelector('.' + this.classes.highlighted) as HTMLDivElement\n          if (highlighted) {\n            highlighted.click()\n          }\n          return false\n        case 'Escape':\n          this.callbacks.close()\n          return false\n      }\n    }\n\n    // Add onclick for main div\n    main.onclick = (e: Event) => {\n      // Dont do anything if disabled\n      if (!this.settings.isEnabled) {\n        return\n      }\n\n      this.settings.isOpen ? this.callbacks.close() : this.callbacks.open()\n    }\n\n    // Add values\n    const values = document.createElement('div')\n    values.classList.add(this.classes.values)\n    main.appendChild(values)\n\n    // Add deselect\n    const deselect = document.createElement('div')\n    deselect.classList.add(this.classes.deselect)\n    if (!this.settings.allowDeselect || this.settings.isMultiple) {\n      deselect.classList.add(this.classes.hide)\n    }\n    deselect.onclick = (e: Event) => {\n      e.stopPropagation()\n\n      // Dont do anything if disabled\n      if (!this.settings.isEnabled) {\n        return\n      }\n\n      this.callbacks.setSelected([''], false)\n    }\n\n    // Add deselect svg\n    const deselectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n    deselectSvg.setAttribute('viewBox', '0 0 100 100')\n    const deselectPath = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n    deselectPath.setAttribute('d', this.classes.deselectPath)\n    deselectSvg.appendChild(deselectPath)\n    deselect.appendChild(deselectSvg)\n    main.appendChild(deselect)\n\n    // Add arrow\n    const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n    arrow.classList.add(this.classes.arrow)\n    arrow.setAttribute('viewBox', '0 0 100 100')\n    const arrowPath = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n    arrowPath.setAttribute('d', this.classes.arrowClose)\n    arrow.appendChild(arrowPath)\n    main.appendChild(arrow)\n\n    return {\n      main: main,\n      values: values,\n      deselect: {\n        main: deselect,\n        svg: deselectSvg,\n        path: deselectPath,\n      },\n      arrow: {\n        main: arrow,\n        path: arrowPath,\n      },\n    }\n  }\n\n  public placeholder(): HTMLDivElement {\n    // Figure out if there is a placeholder option\n    const placeholderOption = this.store.filter((o) => o.placeholder, false) as Option[]\n\n    // If there is a placeholder option use that\n    // If useHtml and html is set, use that\n    // If useHtml is false and text is set, use that\n    // If nothing is set, use the placeholder text\n    let placeholderText = this.settings.placeholderText\n    if (placeholderOption.length) {\n      if (this.settings.useHtml && placeholderOption[0].html !== '') {\n        placeholderText = placeholderOption[0].html\n      }\n      if (!this.settings.useHtml && placeholderOption[0].text !== '') {\n        placeholderText = placeholderOption[0].text\n      }\n    }\n\n    // Create placeholder div\n    const placeholder = document.createElement('div')\n    placeholder.classList.add(this.classes.placeholder)\n    placeholder.innerHTML = placeholderText\n    return placeholder\n  }\n\n  // Get selected values and append to multiSelected values container\n  // and remove those who shouldnt exist\n  public renderValues(): void {\n    // If single select set placeholder or selected value\n    if (!this.settings.isMultiple) {\n      this.renderSingleValue()\n      return\n    }\n\n    this.renderMultipleValues()\n  }\n\n  private renderSingleValue(): void {\n    const selected = this.store.filter((o: Option): boolean => {\n      return o.selected && !o.placeholder\n    }, false) as Option[]\n    const selectedSingle = selected.length > 0 ? selected[0] : null\n\n    // If nothing is seleected use settings placeholder text\n    if (!selectedSingle) {\n      this.main.values.innerHTML = this.placeholder().outerHTML\n    } else {\n      // Create single value container\n      const singleValue = document.createElement('div')\n      singleValue.classList.add(this.classes.single)\n      singleValue.innerHTML = selectedSingle.html && !this.settings.useHtml ? selectedSingle.html : selectedSingle.text\n\n      // If there is a selected value, set a single div\n      this.main.values.innerHTML = singleValue.outerHTML\n    }\n\n    // If allowDeselect is false or selected value is empty just hide deslect\n    if (!this.settings.allowDeselect || !selected.length) {\n      this.main.deselect.main.classList.add(this.classes.hide)\n    } else {\n      this.main.deselect.main.classList.remove(this.classes.hide)\n    }\n  }\n\n  private renderMultipleValues(): void {\n    // Get various peices of data\n    let currentNodes = this.main.values.childNodes as NodeListOf<HTMLDivElement>\n    let selectedOptions = this.store.filter((opt: Option) => {\n      // Only grab options that are selected and display is true\n      return opt.selected && opt.display\n    }, false) as Option[]\n\n    // If selectedOptions is empty set placeholder\n    if (selectedOptions.length === 0) {\n      this.main.values.innerHTML = this.placeholder().outerHTML\n      return\n    } else {\n      // If there is a placeholder, remove it\n      const placeholder = this.main.values.querySelector('.' + this.classes.placeholder)\n      if (placeholder) {\n        placeholder.remove()\n      }\n    }\n\n    // Loop through currentNodes and only include ones that are not in selectedIDs\n    let removeNodes: HTMLDivElement[] = []\n    for (let i = 0; i < currentNodes.length; i++) {\n      const node = currentNodes[i]\n      const id = node.getAttribute('data-id')\n      if (id) {\n        // Check if id is in selectedOptions\n        const found = selectedOptions.filter((opt: Option) => {\n          return opt.id === id\n        }, false)\n\n        // If not found, add to removeNodes\n        if (!found.length) {\n          removeNodes.push(node)\n        }\n      }\n    }\n\n    // Loop through and remove\n    for (const n of removeNodes) {\n      n.classList.add(this.classes.valueOut)\n      setTimeout(() => {\n        this.main.values.removeChild(n)\n      }, 100)\n    }\n\n    // Add values that dont currently exist\n    currentNodes = this.main.values.childNodes as NodeListOf<HTMLDivElement>\n    for (let d = 0; d < selectedOptions.length; d++) {\n      let shouldAdd = true\n      for (let i = 0; i < currentNodes.length; i++) {\n        if (selectedOptions[d].id === String(currentNodes[i].dataset.id)) {\n          shouldAdd = false\n        }\n      }\n\n      // If shouldAdd, insertAdjacentElement it to the values container in the order of the selectedOptions\n      if (shouldAdd) {\n        if (currentNodes.length === 0) {\n          this.main.values.appendChild(this.multipleValue(selectedOptions[d]))\n        } else if (d === 0) {\n          this.main.values.insertBefore(this.multipleValue(selectedOptions[d]), currentNodes[d])\n        } else {\n          currentNodes[d - 1].insertAdjacentElement('afterend', this.multipleValue(selectedOptions[d]))\n        }\n      }\n    }\n  }\n\n  public multipleValue(option: Option): HTMLDivElement {\n    const value = document.createElement('div')\n    value.classList.add(this.classes.value)\n    value.dataset.id = option.id\n\n    const text = document.createElement('div')\n    text.classList.add(this.classes.valueText)\n    text.innerHTML = option.html && this.settings.useHtml !== true ? option.html : option.text\n    value.appendChild(text)\n\n    // Only add deletion if the option is not mandatory\n    if (!option.mandatory) {\n      const deleteDiv = document.createElement('div')\n      deleteDiv.classList.add(this.classes.valueDelete)\n      deleteDiv.onclick = (e: Event) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        // By Default we will delete\n        let shouldDelete = true\n        const before = this.store.getSelectedOptions()\n        const after = before.filter((o) => {\n          return o.selected && o.id !== option.id\n        }, true)\n\n        // Check if minSelected is set and if after length so, return\n        if (this.settings.minSelected && after.length < this.settings.minSelected) {\n          return\n        }\n\n        // If there is a beforeDeselect function run it\n        if (this.callbacks.beforeChange) {\n          shouldDelete = this.callbacks.beforeChange(before, after) === true\n        }\n\n        if (shouldDelete) {\n          // Loop through after and append values to a variable called selected\n          let selectedValues: string[] = []\n          for (const o of after) {\n            if (o instanceof Optgroup) {\n              for (const c of o.options) {\n                selectedValues.push(c.value)\n              }\n            }\n\n            if (o instanceof Option) {\n              selectedValues.push(o.value)\n            }\n          }\n          this.callbacks.setSelected(selectedValues, this.settings.closeOnSelect)\n\n          // Run afterChange callback\n          if (this.callbacks.afterChange) {\n            this.callbacks.afterChange(after)\n          }\n        }\n      }\n\n      // Add delete svg\n      const deleteSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n      deleteSvg.setAttribute('viewBox', '0 0 100 100')\n      const deletePath = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n      deletePath.setAttribute('d', this.classes.optionDelete)\n      deleteSvg.appendChild(deletePath)\n      deleteDiv.appendChild(deleteSvg)\n\n      value.appendChild(deleteDiv)\n    }\n\n    return value\n  }\n\n  public contentDiv(): Content {\n    const main = document.createElement('div')\n    main.classList.add(this.classes.content)\n\n    // Add id to data-id\n    main.dataset.id = this.settings.id\n\n    // Add styles\n    if (this.settings.style !== '') {\n      main.style.cssText = this.settings.style\n    }\n\n    // Add classes\n    if (this.settings.class.length) {\n      for (const c of this.settings.class) {\n        if (c.trim() !== '') {\n          main.classList.add(c.trim())\n        }\n      }\n    }\n\n    // Add search\n    const search = this.searchDiv()\n    main.appendChild(search.main)\n\n    // Add list\n    const list = this.listDiv()\n    main.appendChild(list)\n\n    return {\n      main: main,\n      search: search,\n      list: list,\n    }\n  }\n\n  public moveContent(): void {\n    const containerRect = this.main.main.getBoundingClientRect()\n    this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px'\n    this.content.main.style.left = containerRect.left + window.scrollX + 'px'\n    this.content.main.style.width = containerRect.width + 'px'\n  }\n\n  public searchDiv(): Search {\n    const main = document.createElement('div')\n    const input = document.createElement('input')\n    const addable = document.createElement('div')\n    main.classList.add(this.classes.search)\n\n    // Setup search return object\n    const searchReturn: Search = {\n      main,\n      input,\n    }\n\n    // We still want the search to be tabable but not shown\n    if (!this.settings.showSearch) {\n      main.classList.add(this.classes.hide)\n      input.readOnly = true\n    }\n\n    input.type = 'search'\n    input.placeholder = this.settings.searchPlaceholder\n    input.tabIndex = -1\n    input.setAttribute('aria-label', this.settings.searchPlaceholder)\n    input.setAttribute('autocapitalize', 'off')\n    input.setAttribute('autocomplete', 'off')\n    input.setAttribute('autocorrect', 'off')\n\n    input.oninput = debounce((e: Event) => {\n      this.callbacks.search((e.target as HTMLInputElement).value)\n    }, 100)\n\n    // Deal with keyboard events on search input field\n    input.onkeydown = (e: KeyboardEvent) => {\n      // Convert above if else statemets to switch\n      switch (e.key) {\n        case 'ArrowUp':\n        case 'ArrowDown':\n          this.callbacks.open()\n          e.key === 'ArrowDown' ? this.highlightDown() : this.highlightUp()\n          return false\n        case 'Tab':\n          // When tabbing focus on main div\n          // and then continuing normal tabbing\n          this.settings.isTabbing = true\n          this.main.main.focus()\n          this.callbacks.close()\n\n          setTimeout(() => {\n            this.settings.isTabbing = false\n          }, 200)\n          return true // Continue doing normal tabbing\n        case 'Escape':\n          this.callbacks.close()\n          return false\n        case 'Enter':\n          if (this.callbacks.addable && e.ctrlKey) {\n            addable.click()\n          } else {\n            const highlighted = this.content.list.querySelector('.' + this.classes.highlighted) as HTMLDivElement\n            if (highlighted) {\n              highlighted.click()\n            }\n          }\n          return false\n      }\n    }\n\n    // If focus is on the search input, open the dropdown\n    input.onfocus = () => {\n      // If we are already open, do nothing\n      if (this.settings.isOpen) {\n        return\n      }\n\n      this.callbacks.open()\n    }\n    main.appendChild(input)\n\n    // If addable is enabled, add the addable div\n    if (this.callbacks.addable) {\n      addable.classList.add(this.classes.addable)\n      const plus = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n      plus.setAttribute('viewBox', '0 0 100 100')\n      const plusPath = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n      plusPath.setAttribute('d', this.classes.addablePath)\n      plus.appendChild(plusPath)\n      addable.appendChild(plus)\n      addable.onclick = (e: Event) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        // Do nothing if addable is not set\n        if (!this.callbacks.addable) {\n          return\n        }\n\n        // Grab input value\n        const inputValue = this.content.search.input.value.trim()\n        if (inputValue === '') {\n          this.content.search.input.focus()\n          return\n        }\n\n        // Call addable callback\n        const addableValue = this.callbacks.addable(inputValue)\n\n        // If the addableValue is a string, we will add it as a new option\n        // Otherwise we will assume it is an option object\n        if (typeof addableValue === 'string') {\n          this.callbacks.addOption(\n            new Option({\n              text: addableValue,\n              value: addableValue,\n            }),\n          )\n        } else {\n          this.callbacks.addOption(new Option(addableValue))\n        }\n\n        // Add option to selected\n        this.callbacks.setSelected([inputValue], this.settings.closeOnSelect)\n\n        // Clear search\n        this.callbacks.search('')\n\n        // Close it only if closeOnSelect = true\n        if (this.settings.closeOnSelect) {\n          setTimeout(() => {\n            // Give it a little padding for a better looking animation\n            this.callbacks.close()\n          }, 100)\n        }\n      }\n      main.appendChild(addable)\n\n      // Add the addable to the search return\n      searchReturn.addable = {\n        main: addable,\n        svg: plus,\n        path: plusPath,\n      }\n    }\n\n    return searchReturn\n  }\n\n  // highlightUp is used to highlight the previous option in the list\n  public highlightUp(): void {\n    const highlighted = this.content.list.querySelector('.' + this.classes.highlighted) as HTMLDivElement\n    let prev: HTMLDivElement | null = null\n    if (highlighted) {\n      prev = highlighted.previousSibling as HTMLDivElement\n      while (prev !== null) {\n        if (prev.classList.contains(this.classes.disabled)) {\n          prev = prev.previousSibling as HTMLDivElement\n          continue\n        } else {\n          break\n        }\n      }\n    } else {\n      const allOptions = this.content.list.querySelectorAll(\n        '.' + this.classes.option + ':not(.' + this.classes.disabled + ')',\n      )\n      prev = allOptions[allOptions.length - 1] as HTMLDivElement\n    }\n\n    // Do not select if optgroup label\n    if (prev && prev.classList.contains(this.classes.optgroupLabel)) {\n      prev = null\n    }\n\n    // Check if parent is optgroup\n    if (prev === null) {\n      const parent = highlighted.parentNode as HTMLDivElement\n      if (parent.classList.contains(this.classes.optgroup)) {\n        if (parent.previousSibling) {\n          const prevNodes = (parent.previousSibling as HTMLDivElement).querySelectorAll(\n            '.' + this.classes.option + ':not(.' + this.classes.disabled + ')',\n          )\n          if (prevNodes.length) {\n            prev = prevNodes[prevNodes.length - 1] as HTMLDivElement\n          }\n        }\n      }\n    }\n\n    // If previous element exists highlight it\n    if (prev) {\n      if (highlighted) {\n        highlighted.classList.remove(this.classes.highlighted)\n      }\n      prev.classList.add(this.classes.highlighted)\n      this.ensureElementInView(this.content.list, prev)\n    }\n  }\n\n  // highlightDown is used to highlight the next option in the list\n  public highlightDown(): void {\n    const highlighted = this.content.list.querySelector('.' + this.classes.highlighted) as HTMLDivElement\n    let next = null\n\n    if (highlighted) {\n      next = highlighted.nextSibling as HTMLDivElement\n      while (next !== null) {\n        if (next.classList.contains(this.classes.disabled)) {\n          next = next.nextSibling as HTMLDivElement\n          continue\n        } else {\n          break\n        }\n      }\n    } else {\n      next = this.content.list.querySelector(\n        '.' + this.classes.option + ':not(.' + this.classes.disabled + ')',\n      ) as HTMLDivElement\n    }\n\n    // Check if parent is optgroup\n    if (next === null && highlighted !== null) {\n      const parent = highlighted.parentNode as HTMLDivElement\n      if (parent.classList.contains(this.classes.optgroup)) {\n        if (parent.nextSibling) {\n          const sibling = parent.nextSibling as HTMLDivElement\n          next = sibling.querySelector(\n            '.' + this.classes.option + ':not(.' + this.classes.disabled + ')',\n          ) as HTMLDivElement\n        }\n      }\n    }\n\n    // If previous element exists highlight it\n    if (next) {\n      if (highlighted) {\n        highlighted.classList.remove(this.classes.highlighted)\n      }\n      next.classList.add(this.classes.highlighted)\n      this.ensureElementInView(this.content.list, next)\n    }\n  }\n\n  // Create main container that options will reside\n  public listDiv(): HTMLDivElement {\n    const options = document.createElement('div')\n    options.classList.add(this.classes.list)\n    options.setAttribute('role', 'listbox')\n\n    return options\n  }\n\n  public renderError(error: string) {\n    // Clear out innerHtml\n    this.content.list.innerHTML = ''\n\n    const errorDiv = document.createElement('div')\n    errorDiv.classList.add(this.classes.error)\n    errorDiv.textContent = error\n    this.content.list.appendChild(errorDiv)\n  }\n\n  public renderSearching() {\n    // Clear out innerHtml\n    this.content.list.innerHTML = ''\n\n    const searchingDiv = document.createElement('div')\n    searchingDiv.classList.add(this.classes.searching)\n    searchingDiv.textContent = this.settings.searchingText\n    this.content.list.appendChild(searchingDiv)\n  }\n\n  // Take in data and add options to\n  public renderOptions(data: DataArray): void {\n    // Clear out innerHtml\n    this.content.list.innerHTML = ''\n\n    // If no results show no results text\n    if (data.length === 0) {\n      const noResults = document.createElement('div')\n      noResults.classList.add(this.classes.option)\n      noResults.classList.add(this.classes.disabled)\n      noResults.innerHTML = this.settings.searchText\n      this.content.list.appendChild(noResults)\n      return\n    }\n\n    // Append individual options to div container\n    for (const d of data) {\n      // Create optgroup\n      if (d instanceof Optgroup) {\n        // Create optgroup\n        const optgroupEl = document.createElement('div')\n        optgroupEl.classList.add(this.classes.optgroup)\n\n        // Create label\n        const optgroupLabel = document.createElement('div')\n        optgroupLabel.classList.add(this.classes.optgroupLabel)\n        optgroupLabel.innerHTML = d.label\n\n        // If selectByGroup is true and isMultiple then add click event to label\n        if (this.settings.selectByGroup && this.settings.isMultiple) {\n          optgroupLabel.classList.add(this.classes.optgroupSelectable)\n          optgroupLabel.addEventListener('click', (e: MouseEvent) => {\n            e.preventDefault()\n            e.stopPropagation()\n\n            for (const childEl of optgroupEl.children as any as HTMLDivElement[]) {\n              if (childEl.className.indexOf(this.classes.option) !== -1) {\n                childEl.click()\n              }\n            }\n          })\n        }\n\n        // Add optgroup label\n        optgroupEl.appendChild(optgroupLabel)\n\n        // Loop through options\n        for (const o of d.options) {\n          optgroupEl.appendChild(this.option(o))\n        }\n\n        // Add optgroup to list\n        this.content.list.appendChild(optgroupEl)\n      }\n\n      // Create option\n      if (d instanceof Option) {\n        this.content.list.appendChild(this.option(d as Option))\n      }\n    }\n  }\n\n  // Create option div element\n  public option(option: Option): HTMLDivElement {\n    // Add hidden placeholder\n    if (option.placeholder) {\n      const placeholder = document.createElement('div')\n      placeholder.classList.add(this.classes.option)\n      placeholder.classList.add(this.classes.hide)\n      return placeholder\n    }\n\n    // Create option\n    const optionEl = document.createElement('div')\n    optionEl.dataset.id = option.id // Dataset id for identifying an option\n    optionEl.classList.add(this.classes.option)\n    optionEl.setAttribute('role', 'option') // WCAG attribute\n    if (option.class) {\n      option.class.split(' ').forEach((dataClass: string) => {\n        optionEl.classList.add(dataClass)\n      })\n    }\n    if (option.style) {\n      optionEl.style.cssText = option.style\n    }\n\n    // Set option content\n    if (this.settings.searchHighlight && this.content.search.input.value.trim() !== '') {\n      const textOrHtml = this.settings.useHtml ? option.html : option.text\n      optionEl.innerHTML = this.highlight(textOrHtml, this.content.search.input.value, this.classes.searchHighlighter)\n    } else if (option.html && option.html !== '') {\n      optionEl.innerHTML = option.html\n    } else {\n      optionEl.textContent = option.text\n    }\n\n    // Set title attribute\n    if (this.settings.showOptionTooltips && optionEl.textContent) {\n      optionEl.setAttribute('title', optionEl.textContent)\n    }\n\n    // If allowed to deselect, null onclick and add disabled\n    if ((option.selected && !this.settings.allowDeselect) || (option.disabled && !this.settings.allowDeselect)) {\n      optionEl.classList.add(this.classes.disabled)\n    }\n\n    // If option is selected and hideSelectedOption is true, hide it\n    if (option.selected && this.settings.hideSelected) {\n      optionEl.classList.add(this.classes.hide)\n    }\n\n    // If option is selected\n    if (option.selected) {\n      optionEl.classList.add(this.classes.optionSelected)\n    } else {\n      optionEl.classList.remove(this.classes.optionSelected)\n    }\n\n    // Add click event listener\n    optionEl.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      // Setup variables\n      const selectedOptions = this.store.getSelectedOptions()\n      const element = e.target as HTMLDivElement\n      const elementID = String(element.dataset.id)\n\n      // If the option is disabled or selected and the user isnt allowed to deselect\n      if (option.disabled || (option.selected && !this.settings.allowDeselect)) {\n        return\n      }\n\n      // Check limit and do nothing if limit is reached\n      if (\n        this.settings.isMultiple &&\n        Array.isArray(selectedOptions) &&\n        this.settings.maxSelected <= selectedOptions.length\n      ) {\n        return\n      }\n\n      // Setup variables\n      let shouldUpdate = false\n      const before = this.store.getSelectedOptions()\n      let after = [] as Option[]\n\n      // If multiple\n      if (this.settings.isMultiple) {\n        if (option.selected) {\n          // If selected after would remove\n          after = before.filter((o: Option) => o.id !== elementID)\n        } else {\n          // If not selected after would add\n          after = before.concat(option)\n        }\n      }\n\n      // If single\n      if (!this.settings.isMultiple) {\n        if (option.selected) {\n          // If selected after would remove\n          after = []\n        } else {\n          // If not selected after would add\n          after = [option]\n        }\n      }\n\n      // If no beforeOnChange is set automatically update at end\n      if (!this.callbacks.beforeChange) {\n        shouldUpdate = true\n      }\n\n      if (this.callbacks.beforeChange) {\n        // Check if beforeChange returns false\n        if (this.callbacks.beforeChange(after, before) === false) {\n          shouldUpdate = false\n        } else {\n          shouldUpdate = true\n        }\n      }\n\n      if (shouldUpdate) {\n        // Check if the option exists in the store\n        // if not run addOption callback\n        if (!this.store.getOptionByID(elementID)) {\n          this.callbacks.addOption(option)\n        }\n\n        // Get values from after and set as selected\n        this.callbacks.setSelected(\n          after.map((o: Option) => o.value),\n          this.settings.closeOnSelect,\n        )\n\n        // callback that the value has changed\n        if (this.callbacks.afterChange) {\n          this.callbacks.afterChange(after)\n        }\n      }\n    })\n\n    return optionEl\n  }\n\n  public destroy(): void {\n    // Remove main\n    this.main.main.remove()\n\n    // Remove content\n    this.content.main.remove()\n  }\n\n  private highlight(str: string, search: any, className: string) {\n    // the completed string will be itself if already set, otherwise, the string that was passed in\n    let completedString: any = str\n    const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i')\n\n    // If the regex doesn't match the string just exit\n    if (!str.match(regex)) {\n      return str\n    }\n\n    // Otherwise, get to highlighting\n    const matchStartPosition = (str.match(regex) as any).index\n    const matchEndPosition = matchStartPosition + (str.match(regex) as any)[0].toString().length\n    const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition)\n    completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`)\n    return completedString\n  }\n\n  public moveContentAbove(): void {\n    let mainHeight: number = this.main.main.offsetHeight\n\n    const contentHeight = this.content.main.offsetHeight\n    const height = mainHeight + contentHeight - 1\n    this.content.main.style.margin = '-' + height + 'px 0px 0px 0px'\n    this.content.main.style.transformOrigin = 'center bottom'\n\n    this.main.main.classList.remove(this.classes.openBelow)\n    this.main.main.classList.add(this.classes.openAbove)\n  }\n\n  public moveContentBelow(): void {\n    this.content.main.style.margin = '-1px 0px 0px 0px'\n    this.content.main.style.transformOrigin = 'center top'\n\n    this.main.main.classList.remove(this.classes.openAbove)\n    this.main.main.classList.add(this.classes.openBelow)\n  }\n\n  public ensureElementInView(container: HTMLElement, element: HTMLElement): void {\n    // Determine container top and bottom\n    const cTop = container.scrollTop + container.offsetTop // Make sure to have offsetTop\n    const cBottom = cTop + container.clientHeight\n\n    // Determine element top and bottom\n    const eTop = element.offsetTop\n    const eBottom = eTop + element.clientHeight\n\n    // Check if out of view\n    if (eTop < cTop) {\n      container.scrollTop -= cTop - eTop\n    } else if (eBottom > cBottom) {\n      container.scrollTop += eBottom - cBottom\n    }\n  }\n\n  public putContent(el: HTMLElement, isOpen: boolean): 'up' | 'down' {\n    const height = el.offsetHeight\n    const rect = el.getBoundingClientRect()\n    const elemTop = isOpen ? rect.top : rect.top - height\n    const elemBottom = isOpen ? rect.bottom : rect.bottom + height\n\n    if (elemTop <= 0) {\n      return 'down'\n    }\n    if (elemBottom >= window.innerHeight) {\n      return 'up'\n    }\n\n    // default to current position if we cant determine a perfect one\n    return 'down'\n  }\n\n  // public focusNextElement() {\n  //   //add all elements we want to include in our selection\n  //   var focussableElements =\n  //     'a:not([disabled]), button:not([disabled]), input[type=text]:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])'\n  //   if (document.activeElement && document.activeElement.form) {\n  //     var focussable = Array.prototype.filter.call(\n  //       document.activeElement.form.querySelectorAll(focussableElements),\n  //       function (element) {\n  //         //check for visibility while always include the current activeElement\n  //         return element.offsetWidth > 0 || element.offsetHeight > 0 || element === document.activeElement\n  //       },\n  //     )\n  //     var index = focussable.indexOf(document.activeElement)\n  //     if (index > -1) {\n  //       var nextElement = focussable[index + 1] || focussable[0]\n  //       nextElement.focus()\n  //     }\n  //   }\n  // }\n}\n","import { generateID, kebabCase } from './helper'\nimport { DataArray, Optgroup, Option } from './store'\n\nexport default class Select {\n  public select: HTMLSelectElement\n  public listen: boolean = false\n\n  // Mutation observer fields\n  public changeFunc?: (data: DataArray) => void\n  private observer: MutationObserver | null = null\n\n  constructor(select: HTMLSelectElement) {\n    this.select = select\n  }\n\n  // Set to enabled\n  public enable(): void {\n    // Disable original select but dont trigger observer\n    this.disconnectObserver()\n    this.select.disabled = false\n    this.connectObserver()\n  }\n\n  // Set to disabled\n  public disable(): void {\n    // Enable original select but dont trigger observer\n    this.disconnectObserver()\n    this.select.disabled = true\n    this.connectObserver()\n  }\n\n  // Set misc attributes on the main select element\n  public hideUI(): void {\n    this.select.tabIndex = -1\n    this.select.style.display = 'none'\n    this.select.setAttribute('aria-hidden', 'true')\n  }\n\n  public showUI(): void {\n    this.select.removeAttribute('tabindex')\n    this.select.style.display = ''\n    this.select.removeAttribute('aria-hidden')\n  }\n\n  public changeListen(on: boolean) {\n    this.listen = on\n\n    // Deal with some observer situations\n    if (this.listen) {\n      this.connectObserver()\n    } else {\n      this.disconnectObserver()\n    }\n  }\n\n  // Add change listener to original select\n  public addChangeFunc(func: (data: DataArray) => void): void {\n    this.changeFunc = func\n    this.addObserver()\n    this.connectObserver()\n    this.changeListen(true) // Last start listening\n  }\n\n  // remove change listener from original select\n  public removeChangeFunc(): void {\n    this.changeListen(false) // First stop listening\n    this.changeFunc = undefined\n  }\n\n  public setSelected(value: string[]): void {\n    // Loop through options and set selected\n    const options = this.select.childNodes as any as (HTMLOptGroupElement | HTMLOptionElement)[]\n    for (const o of options) {\n      if (o.nodeName === 'OPTGROUP') {\n        const optgroup = o as HTMLOptGroupElement\n        const optgroupOptions = optgroup.childNodes as any as HTMLOptionElement[]\n        for (const oo of optgroupOptions) {\n          if (oo.nodeName === 'OPTION') {\n            const option = oo as HTMLOptionElement\n            option.selected = value.includes(option.value)\n          }\n        }\n      }\n\n      if (o.nodeName === 'OPTION') {\n        const option = o as HTMLOptionElement\n        option.selected = value.includes(option.value)\n      }\n    }\n  }\n\n  private observeWrapper(mutations: MutationRecord[]): void {\n    if (this.changeFunc) {\n      this.changeFunc(this.getData())\n    }\n  }\n\n  // Add MutationObserver to select\n  private addObserver(): void {\n    // If mutation observer already exists then disconnect and\n    if (this.observer) {\n      this.disconnectObserver()\n      this.observer = null\n    }\n\n    // If anything changes in the select then update the data\n    this.observer = new MutationObserver(this.observeWrapper)\n  }\n\n  private connectObserver(): void {\n    if (this.observer) {\n      this.observer.observe(this.select, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true,\n      })\n    }\n  }\n\n  private disconnectObserver(): void {\n    if (this.observer) {\n      this.observer.disconnect()\n    }\n  }\n\n  // From the select element pull optgroup and options into data\n  public getData(): DataArray {\n    let data = []\n\n    // Loop through nodes and get data\n    const nodes = this.select.childNodes as any as HTMLOptGroupElement[] | HTMLOptionElement[]\n    for (const n of nodes) {\n      // Optgroup\n      if (n.nodeName === 'OPTGROUP') {\n        data.push(this.getDataFromOptgroup(n as HTMLOptGroupElement))\n      }\n\n      // Option\n      if (n.nodeName === 'OPTION') {\n        data.push(this.getDataFromOption(n as HTMLOptionElement))\n      }\n    }\n\n    return data\n  }\n\n  public getDataFromOptgroup(optgroup: HTMLOptGroupElement): Optgroup {\n    let data = {\n      id: '',\n      label: optgroup.label,\n      options: [],\n    } as Optgroup\n\n    const options = optgroup.childNodes as any as HTMLOptionElement[]\n    for (const o of options) {\n      if (o.nodeName === 'OPTION') {\n        data.options.push(this.getDataFromOption(o as HTMLOptionElement))\n      }\n    }\n\n    return data\n  }\n\n  // From passed in option pull pieces of usable information\n  public getDataFromOption(option: HTMLOptionElement): Option {\n    return {\n      id: (option.dataset ? option.dataset.id : false) || generateID(),\n      value: option.value,\n      text: option.text,\n      html: option.innerHTML,\n      selected: option.selected,\n      display: option.style.display === 'none' ? false : true,\n      disabled: option.disabled,\n      mandatory: option.dataset ? option.dataset.mandatory === 'true' : false,\n      placeholder: option.dataset.placeholder === 'true',\n      class: option.className,\n      style: option.style.cssText,\n      data: option.dataset,\n    } as Option\n  }\n\n  public updateSelect(id?: string, style?: string, classes?: string[]): void {\n    // Update id\n    if (id) {\n      this.select.id = id\n    }\n\n    // Update style\n    if (style) {\n      this.select.style.cssText = style\n    }\n\n    // Update classes\n    if (classes) {\n      this.select.className = ''\n      classes.forEach((c) => {\n        if (c.trim() !== '') {\n          this.select.classList.add(c.trim())\n        }\n      })\n    }\n  }\n\n  public updateOptions(data: DataArray): void {\n    // Clear out select\n    this.select.innerHTML = ''\n\n    for (const d of data) {\n      if (d instanceof Optgroup) {\n        this.select.appendChild(this.createOptgroup(d))\n      }\n\n      if (d instanceof Option) {\n        this.select.appendChild(this.createOption(d))\n      }\n    }\n  }\n\n  public createOptgroup(optgroup: Optgroup): HTMLOptGroupElement {\n    const optgroupEl = document.createElement('optgroup')\n    optgroupEl.id = optgroup.id\n    optgroupEl.label = optgroup.label\n    if (optgroup.options) {\n      for (const o of optgroup.options) {\n        optgroupEl.appendChild(this.createOption(o))\n      }\n    }\n    return optgroupEl\n  }\n\n  public createOption(info: Option): HTMLOptionElement {\n    const optionEl = document.createElement('option')\n    optionEl.value = info.value !== '' ? info.value : info.text\n    optionEl.innerHTML = info.html || info.text\n    if (info.selected) {\n      optionEl.selected = info.selected\n    }\n    if (info.disabled) {\n      optionEl.disabled = true\n    }\n    if (info.display === false) {\n      optionEl.style.display = 'none'\n    }\n    if (info.placeholder) {\n      optionEl.setAttribute('data-placeholder', 'true')\n    }\n    if (info.mandatory) {\n      optionEl.setAttribute('data-mandatory', 'true')\n    }\n    if (info.class) {\n      info.class.split(' ').forEach((optionClass: string) => {\n        optionEl.classList.add(optionClass)\n      })\n    }\n    if (info.data && typeof info.data === 'object') {\n      Object.keys(info.data).forEach((key) => {\n        optionEl.setAttribute('data-' + kebabCase(key), info.data[key])\n      })\n    }\n\n    return optionEl\n  }\n}\n","import { generateID } from './helper'\n\nexport type SettingsPartial = Partial<Settings>\n\nexport default class Settings {\n  public id: string = '' // Primary ID for the select\n  public style: string = '' // Style attribute from the select element\n  public class: string[] = [] // Class attribute from the select element\n\n  // Dynamic settings\n  public isMultiple: boolean = false\n  public isOpen: boolean = false\n  public isTabbing: boolean = false\n\n  // Fields set from constructor\n  public isEnabled: boolean\n  public showSearch: boolean\n  public searchPlaceholder: string\n  public searchText: string\n  public searchingText: string\n  public searchHighlight: boolean\n  public closeOnSelect: boolean\n  public contentLocation: HTMLElement\n  public contentPosition: 'auto' | 'up' | 'down'\n  public placeholderText: string\n  public allowDeselect: boolean\n  public hideSelected: boolean\n  public useHtml: boolean\n  public showOptionTooltips: boolean\n  public selectByGroup: boolean\n  public minSelected: number\n  public maxSelected: number\n  public timeoutDelay: number\n\n  constructor(settings?: SettingsPartial) {\n    if (!settings) {\n      settings = {}\n    }\n\n    this.id = 'ss-' + generateID()\n    this.style = settings.style || ''\n    this.class = settings.class || []\n\n    this.isEnabled = settings.isEnabled !== undefined ? settings.isEnabled : true\n    this.showSearch = settings.showSearch !== undefined ? settings.showSearch : true\n    this.searchPlaceholder = settings.searchPlaceholder || 'Search'\n    this.searchText = settings.searchText || 'No Results'\n    this.searchingText = settings.searchingText || 'Searching...'\n    this.searchHighlight = settings.searchHighlight !== undefined ? settings.searchHighlight : false\n    this.closeOnSelect = settings.closeOnSelect !== undefined ? settings.closeOnSelect : true\n    this.contentLocation = settings.contentLocation || document.body\n    this.contentPosition = settings.contentPosition || 'auto' // options: auto, up, down\n    this.placeholderText = settings.placeholderText || 'Select Value'\n    this.allowDeselect = settings.allowDeselect !== undefined ? settings.allowDeselect : false\n    this.hideSelected = settings.hideSelected !== undefined ? settings.hideSelected : false\n    this.useHtml = settings.useHtml !== undefined ? settings.useHtml : false\n    this.showOptionTooltips = settings.showOptionTooltips !== undefined ? settings.showOptionTooltips : false\n    this.selectByGroup = settings.selectByGroup !== undefined ? settings.selectByGroup : false\n    this.minSelected = settings.minSelected || 0\n    this.maxSelected = settings.maxSelected || 1000\n    this.timeoutDelay = settings.timeoutDelay || 200\n  }\n}\n","import { debounce, hasClassInTree } from './helper'\nimport Render from './render'\nimport Select from './select'\nimport Settings, { SettingsPartial } from './settings'\nimport Store, { DataArray, DataArrayPartial, Option, OptionOptional } from './store'\n\n// Export everything to main slim select file\nexport * from './helper'\nexport * from './render'\nexport * from './select'\nexport * from './settings'\nexport * from './store'\n\nexport interface Config {\n  select: string | Element\n  data?: DataArrayPartial\n  settings?: SettingsPartial\n  events?: Events\n}\n\nexport interface Events {\n  search?: (searchValue: string, currentData: DataArray) => Promise<DataArrayPartial> | DataArrayPartial\n  searchFilter?: (opt: Option, search: string) => boolean\n  addable?: (value: string) => OptionOptional | string\n  beforeChange?: (newVal: Option[], oldVal: Option[]) => boolean | void\n  afterChange?: (newVal: Option[]) => void\n  beforeOpen?: () => void\n  afterOpen?: () => void\n  beforeClose?: () => void\n  afterClose?: () => void\n}\n\nexport default class SlimSelect {\n  public selectEl: HTMLSelectElement\n\n  // Classes\n  public settings: Settings\n  public select: Select\n  public store: Store\n  public render: Render\n\n  // Events\n  public events = {\n    search: undefined,\n    searchFilter: (opt: Option, search: string) => {\n      return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1\n    },\n    addable: undefined,\n    beforeChange: undefined,\n    afterChange: undefined,\n    beforeOpen: undefined,\n    afterOpen: undefined,\n    beforeClose: undefined,\n    afterClose: undefined,\n  } as Events\n\n  constructor(config: Config) {\n    // Make sure you get the right element\n    this.selectEl = (\n      typeof config.select === 'string' ? document.querySelector(config.select) : config.select\n    ) as HTMLSelectElement\n    if (!this.selectEl) {\n      throw new Error('Could not find select element')\n    }\n    if (this.selectEl.tagName !== 'SELECT') {\n      throw new Error('Element isnt of type select')\n    }\n\n    // If select already has a slim select id on it lets destroy it first\n    if (this.selectEl.dataset.ssid) {\n      this.destroy()\n    }\n\n    // Set settings\n    this.settings = new Settings(config.settings)\n\n    // Set events\n    for (const key in config.events) {\n      if (config.events.hasOwnProperty(key)) {\n        ;(this.events as { [key: string]: any })[key] = (config.events as { [key: string]: any })[key]\n      }\n    }\n\n    // Upate settings with type, style and classname\n    this.settings.isMultiple = this.selectEl.multiple\n    this.settings.style = this.selectEl.style.cssText\n    this.settings.class = this.selectEl.className.split(' ')\n\n    // Set select class\n    this.select = new Select(this.selectEl)\n    this.select.updateSelect(this.settings.id, this.settings.style, this.settings.class)\n    this.select.hideUI() // Hide the original select element\n\n    // Set store class\n    this.store = new Store(config.data ? config.data : this.select.getData())\n\n    // If data is passed update the original select element\n    if (config.data) {\n      this.select.updateOptions(this.store.getData())\n    }\n\n    // Set render callbacks\n    const callbacks = {\n      open: this.open.bind(this),\n      close: this.close.bind(this),\n      addable: this.events.addable ? this.events.addable : undefined,\n      setSelected: this.setSelected.bind(this),\n      addOption: this.addOption.bind(this),\n      search: this.search.bind(this),\n      beforeChange: this.events.beforeChange,\n      afterChange: this.events.afterChange,\n    }\n\n    // Setup render class\n    this.render = new Render(this.settings, this.store, callbacks)\n\n    // Add render after original select element\n    if (this.selectEl.parentNode) {\n      this.selectEl.parentNode.insertBefore(this.render.main.main, this.selectEl.nextSibling)\n    }\n\n    // Add onclick listener to document to closeContent if clicked outside\n    document.addEventListener('click', this.documentClick)\n\n    // Add window resize listener to moveContent if window size changes\n    window.addEventListener('resize', this.windowResize, false)\n\n    // If the user wants to show the content forcibly on a specific side,\n    // there is no need to listen for scroll events\n    if (this.settings.contentPosition === 'auto') {\n      window.addEventListener('scroll', this.windowScroll, false)\n    }\n\n    // If disabled lets call it\n    if (!this.settings.isEnabled) {\n      this.disable()\n    }\n\n    // Add SlimSelect to select element\n    ;(this.selectEl as any).slim = this\n  }\n\n  // Set to enabled and remove disabled classes\n  public enable(): void {\n    this.settings.isEnabled = true\n\n    this.select.enable()\n    this.render.enable()\n  }\n\n  // Set to disabled and add disabled classes\n  public disable(): void {\n    this.settings.isEnabled = false\n\n    this.select.disable()\n    this.render.disable()\n  }\n\n  public getData(): DataArray {\n    return this.store.getData()\n  }\n\n  public getSelected(): DataArray {\n    return this.store.getSelected()\n  }\n\n  public getSelectedOptions(): Option[] {\n    return this.store.getSelectedOptions()\n  }\n\n  public setSelected(value: string | string[], close: boolean = true): void {\n    // Update the store\n    this.store.setSelectedBy('value', Array.isArray(value) ? value : [value])\n    const data = this.store.getData()\n\n    // Update the select element\n    this.select.updateOptions(data)\n\n    // Update the render\n    this.render.renderValues()\n    this.render.renderOptions(data)\n\n    // Close the content\n    if (close) {\n      this.close()\n    }\n  }\n\n  public setData(data: DataArrayPartial): void {\n    // Update the store\n    this.store.setData(data)\n\n    // Update original select element\n    this.select.updateOptions(this.store.getData())\n\n    // Update the render\n    this.render.renderOptions(this.store.getData())\n  }\n\n  public addOption(option: OptionOptional): void {\n    // Add option to store\n    this.store.addOption(option)\n    const data = this.store.getData()\n\n    // Update the select element\n    this.select.updateOptions(data)\n\n    // Update the render\n    this.render.renderValues()\n    this.render.renderOptions(data)\n  }\n\n  public open(): void {\n    // Dont open if disabled\n    if (!this.settings.isEnabled) {\n      return\n    }\n\n    // Dont do anything if the content is already open\n    if (this.settings.isOpen) {\n      return\n    }\n\n    // Run beforeOpen callback\n    if (this.events.beforeOpen) {\n      this.events.beforeOpen()\n    }\n\n    this.render.open()\n\n    // setTimeout is for animation completion\n    setTimeout(() => {\n      // Update settings\n      this.settings.isOpen = true\n\n      // Focus on input field only if search is enabled\n      if (this.settings.showSearch) {\n        this.render.content.search.input.focus()\n      }\n\n      // Run afterOpen callback\n      if (this.events.afterOpen) {\n        this.events.afterOpen()\n      }\n    }, this.settings.timeoutDelay)\n  }\n\n  public close(): void {\n    // Dont do anything if the content is already closed\n    if (!this.settings.isOpen) {\n      return\n    }\n\n    // Run beforeClose calback\n    if (this.events.beforeClose) {\n      this.events.beforeClose()\n    }\n\n    // Tell render to close\n    this.render.close()\n\n    // Update settings\n    this.settings.isOpen = false\n\n    // Clear search\n    this.search('') // Clear search\n\n    // Reset the content below\n    setTimeout(() => {\n      // After content is closed lets blur on the input field\n      this.render.content.search.input.blur()\n\n      // Run afterClose callback\n      if (this.events.afterClose) {\n        this.events.afterClose()\n      }\n    }, this.settings.timeoutDelay)\n  }\n\n  // Take in string value and search current options\n  public search(value: string): void {\n    // If the passed in value is not the same as the search input value\n    // then lets update the search input value\n    if (this.render.content.search.input.value !== value) {\n      this.render.content.search.input.value = value\n    }\n\n    // If no search event run regular search\n    if (!this.events.search) {\n      // If value is empty then render all options\n      this.render.renderOptions(value === '' ? this.store.getData() : this.store.search(value))\n      return\n    }\n\n    // Search event exists so lets render the searching text\n    this.render.renderSearching()\n\n    // Based upon the search event deal with the response\n    const searchResp = this.events.search(value, this.store.getSelected())\n\n    // If the search event returns a promise\n    if (searchResp instanceof Promise) {\n      searchResp\n        .then((data: DataArrayPartial) => {\n          // Update the render with the new data\n          this.render.renderOptions(this.store.partialToFullData(data))\n        })\n        .catch((err: Error | string) => {\n          // Update the render with error\n          this.render.renderError(typeof err === 'string' ? err : err.message)\n        })\n\n      return\n    } else if (Array.isArray(searchResp)) {\n      // Update the render options\n      this.render.renderOptions(this.store.partialToFullData(searchResp))\n    } else {\n      // Update the render with error\n      this.render.renderError('Search event must return a promise or an array of data')\n    }\n  }\n\n  public destroy(): void {\n    document.removeEventListener('click', this.documentClick)\n\n    window.removeEventListener('resize', this.windowResize, false)\n\n    if (this.settings.contentPosition === 'auto') {\n      window.removeEventListener('scroll', this.windowScroll, false)\n    }\n\n    // Remove the render\n    this.render.destroy()\n\n    // Show the original select element\n    this.select.showUI()\n  }\n\n  private windowResize: (e: Event) => void = debounce(() => {\n    if (!this.settings.isOpen) {\n      return\n    }\n\n    this.render.moveContent()\n  })\n\n  // Event listener for window scrolling\n  private windowScroll: (e: Event) => void = debounce(() => {\n    // If the content is not open, there is no need to move it\n    if (!this.settings.isOpen) {\n      return\n    }\n\n    // Determine where to put the content\n    if (this.render.putContent(this.render.content.main, this.settings.isOpen) === 'up') {\n      this.render.moveContentAbove()\n    } else {\n      this.render.moveContentBelow()\n    }\n  })\n\n  // Event listener for document click\n  private documentClick: (e: Event) => void = (e: Event) => {\n    // If the content is not open, there is no need to close it\n    if (!this.settings.isOpen) {\n      return\n    }\n\n    // Check if the click was on the content by looking at the parents\n    if (e.target && !hasClassInTree(e.target as HTMLElement, this.settings.id)) {\n      this.close()\n    }\n  }\n}\n"],"names":["generateID","Math","random","toString","substring","hasClassInTree","element","className","hasClass","e","c","classList","contains","dataset","id","parentByClass","document","parentNode","debounce","func","wait","immediate","timeout","args","_i","arguments","length","context","self","later","apply","callNow","clearTimeout","setTimeout","kebabCase","str","result","replace","match","toLowerCase","toUpperCase","Optgroup","optgroup","this","label","options","_a","o","push","Option","option","value","text","html","selected","undefined","display","disabled","mandatory","placeholder","style","data","Store","setData","prototype","partialToFullData","dataFinal","forEach","dataObj","optOptions_1","getData","filter","getDataOptions","addOption","setSelectedBy","selectedType","selectedVals","_b","_c","includes","getSelected","opt","getSelectedOptions","getSelectedIDs","selectedOptions","selectedIDs","getSelectedValues","selectedValues","getOptionByID","search","searchFilter","trim","indexOf","includeOptgroup","dataSearch","optOptions_2","Render","settings","store","callbacks","classes","main","openAbove","openBelow","values","single","valueText","valueDelete","valueOut","deselect","deselectPath","arrow","arrowClose","arrowOpen","content","open","searchHighlighter","searching","addable","addablePath","list","optgroupLabel","optgroupSelectable","optionSelected","optionDelete","highlighted","error","hide","mainDiv","contentDiv","renderValues","renderOptions","contentLocation","appendChild","enable","remove","input","disable","add","path","setAttribute","contentPosition","moveContent","moveContentAbove","moveContentBelow","putContent","isOpen","selectedId","selectedOption","querySelector","ensureElementInView","close","_this","createElement","tabIndex","cssText","onfocus","isTabbing","onkeydown","key","highlightDown","highlightUp","click","onclick","isEnabled","allowDeselect","isMultiple","stopPropagation","setSelected","deselectSvg","createElementNS","arrowPath","svg","placeholderOption","placeholderText","useHtml","innerHTML","renderMultipleValues","renderSingleValue","selectedSingle","singleValue","outerHTML","currentNodes","childNodes","removeNodes","i","node","getAttribute","n","this_1","removeChild","removeNodes_1","d","shouldAdd","String","multipleValue","insertBefore","insertAdjacentElement","deleteDiv","preventDefault","shouldDelete","before","after","minSelected","beforeChange","after_1","closeOnSelect","afterChange","deleteSvg","deletePath","searchDiv","listDiv","containerRect","getBoundingClientRect","top","height","window","scrollY","left","scrollX","width","searchReturn","showSearch","readOnly","type","searchPlaceholder","oninput","target","focus","ctrlKey","plus","plusPath","inputValue","addableValue","prev","previousSibling","allOptions","querySelectorAll","parent_1","prevNodes","next","nextSibling","parent_2","renderError","errorDiv","textContent","renderSearching","searchingDiv","searchingText","noResults","searchText","optgroupEl_1","this_2","selectByGroup","addEventListener","children","childEl","data_1","optionEl","split","dataClass","searchHighlight","textOrHtml","highlight","showOptionTooltips","hideSelected","elementID","Array","isArray","maxSelected","shouldUpdate","concat","map","destroy","completedString","regex","RegExp","matchStartPosition","index","matchEndPosition","originalTextFoundByRegex","offsetHeight","margin","transformOrigin","container","cTop","scrollTop","offsetTop","cBottom","clientHeight","eTop","eBottom","el","rect","elemTop","elemBottom","bottom","innerHeight","Select","select","listen","observer","disconnectObserver","connectObserver","hideUI","showUI","removeAttribute","changeListen","on","addChangeFunc","changeFunc","addObserver","removeChangeFunc","options_1","nodeName","optgroupOptions_1","oo","observeWrapper","mutations","MutationObserver","observe","attributes","childList","characterData","subtree","disconnect","nodes_1","getDataFromOptgroup","getDataFromOption","options_2","class","updateSelect","updateOptions","createOptgroup","createOption","optgroupEl","info","optionClass","Object","keys","Settings","body","timeoutDelay","SlimSelect","config","events","beforeOpen","afterOpen","beforeClose","afterClose","windowResize","render","windowScroll","documentClick","selectEl","Error","tagName","ssid","hasOwnProperty","multiple","bind","slim","blur","searchResp","Promise","then","err","message","removeEventListener"],"mappings":"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"}