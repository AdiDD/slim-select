{"version":3,"file":"slimselect.umd.js","sources":["../src/src/slim-select/helper.ts","../src/src/slim-select/store.ts","../src/src/slim-select/render.ts","../src/src/slim-select/select.ts","../src/src/slim-select/settings.ts","../src/src/slim-select/index.ts"],"sourcesContent":["export function generateID(): string {\n  return Math.floor(Math.random() * 100000).toString()\n}\n\nexport function hasClassInTree(element: HTMLElement, className: string) {\n  function hasClass(e: HTMLElement, c: string) {\n    if (!(!c || !e || !e.classList || !e.classList.contains(c))) {\n      return e\n    }\n    return null\n  }\n\n  function parentByClass(e: any, c: string): any {\n    if (!e || e === (document as any)) {\n      return null\n    } else if (hasClass(e, c)) {\n      return e\n    } else {\n      return parentByClass(e.parentNode, c)\n    }\n  }\n\n  return hasClass(element, className) || parentByClass(element, className)\n}\n\nexport function ensureElementInView(container: HTMLElement, element: HTMLElement): void {\n  // Determine container top and bottom\n  const cTop = container.scrollTop + container.offsetTop // Make sure to have offsetTop\n  const cBottom = cTop + container.clientHeight\n\n  // Determine element top and bottom\n  const eTop = element.offsetTop\n  const eBottom = eTop + element.clientHeight\n\n  // Check if out of view\n  if (eTop < cTop) {\n    container.scrollTop -= cTop - eTop\n  } else if (eBottom > cBottom) {\n    container.scrollTop += eBottom - cBottom\n  }\n}\n\nexport function putContent(el: HTMLElement, currentPosition: string, isOpen: boolean): string {\n  const height = el.offsetHeight\n  const rect = el.getBoundingClientRect()\n  const elemTop = isOpen ? rect.top : rect.top - height\n  const elemBottom = isOpen ? rect.bottom : rect.bottom + height\n\n  if (elemTop <= 0) {\n    return 'below'\n  }\n  if (elemBottom >= window.innerHeight) {\n    return 'above'\n  }\n  return isOpen ? currentPosition : 'below'\n}\n\nexport function debounce(func: (...params: any[]) => void, wait = 100, immediate = false): () => void {\n  let timeout: any\n  return function (this: any, ...args: any[]) {\n    const context = self\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(context, args)\n      }\n    }\n    const callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) {\n      func.apply(context, args)\n    }\n  }\n}\n\nexport function isValueInArrayOfObjects(selected: any, key: string, value: string): boolean {\n  if (!Array.isArray(selected)) {\n    return selected[key] === value\n  }\n\n  for (const s of selected) {\n    if (s && s[key] && s[key] === value) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function highlight(str: string, search: any, className: string) {\n  // the completed string will be itself if already set, otherwise, the string that was passed in\n  let completedString: any = str\n  const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i')\n\n  // If the regex doesn't match the string just exit\n  if (!str.match(regex)) {\n    return str\n  }\n\n  // Otherwise, get to highlighting\n  const matchStartPosition = (str.match(regex) as any).index\n  const matchEndPosition = matchStartPosition + (str.match(regex) as any)[0].toString().length\n  const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition)\n  completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`)\n  return completedString\n}\n\nexport function kebabCase(str: string) {\n  const result = str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match) => '-' + match.toLowerCase())\n  return str[0] === str[0].toUpperCase() ? result.substring(1) : result\n}\n","import { generateID } from './helper'\n\nexport type DataArray = DataObject[]\nexport type DataObject = Optgroup | Option\n\nexport type DataArrayPartial = DataObjectPartial[]\nexport type DataObjectPartial = OptgroupOptional | OptionOptional\n\nexport interface OptgroupOptional {\n  id?: string\n  label: string // Required\n  options?: OptionOptional[]\n}\n\nexport class Optgroup {\n  public id: string\n  public label: string\n  public options: Option[]\n\n  constructor(optgroup: OptgroupOptional) {\n    this.id = !optgroup.id || optgroup.id === '' ? generateID() : optgroup.id\n    this.label = optgroup.label || ''\n\n    // If options exist, loop through options and create new option class\n    // and set the options to the optgroup options field\n    this.options = []\n    if (optgroup.options) {\n      for (const o of optgroup.options) {\n        this.options.push(new Option(o))\n      }\n    }\n  }\n}\n\nexport interface OptionOptional {\n  id?: string\n  value?: string\n  text: string // Required\n  html?: string\n  selected?: boolean\n  display?: boolean\n  disabled?: boolean\n  placeholder?: string\n  class?: string\n  style?: string\n  data?: { [key: string]: string }\n  mandatory?: boolean\n}\n\nexport class Option {\n  id: string\n  value: string\n  text: string\n  html: string\n  selected: boolean\n  display: boolean\n  disabled: boolean\n  placeholder: string\n  class: string\n  style: string\n  data: { [key: string]: string }\n  mandatory: boolean\n\n  constructor(option: OptionOptional) {\n    this.id = !option.id || option.id === '' ? generateID() : option.id\n    this.value = option.value || ''\n    this.text = option.text || ''\n    this.html = option.html || ''\n    this.selected = option.selected || false\n    this.display = option.display || true\n    this.disabled = option.disabled || false\n    this.placeholder = option.placeholder || ''\n    this.class = option.class || ''\n    this.style = option.style || ''\n    this.data = option.data || {}\n    this.mandatory = option.mandatory || false\n  }\n}\n\nexport default class Store {\n  private data: DataArray = []\n\n  constructor(data: DataArrayPartial) {\n    this.setData(data)\n  }\n\n  public setData(data: DataArray | DataArrayPartial) {\n    data.forEach((dataObj: DataObject | DataObjectPartial) => {\n      // Optgroup\n      if (dataObj instanceof Optgroup || 'label' in dataObj) {\n        let optOptions: Option[] = []\n        if ('options' in dataObj && dataObj.options) {\n          dataObj.options.forEach((option: Option | OptionOptional) => {\n            optOptions.push(new Option(option))\n          })\n        }\n\n        if (optOptions.length > 0) {\n          this.data.push(new Optgroup(dataObj))\n        }\n      }\n\n      // Option\n      if (dataObj instanceof Option || 'text' in dataObj) {\n        this.data.push(new Option(dataObj))\n      }\n    })\n  }\n\n  // Get data will return all the data\n  public getData(): DataArray {\n    return this.filter(null, true)\n  }\n\n  // Get data options will return the data as a\n  // flat array of just options\n  public getDataOptions(): Option[] {\n    return this.filter(null, false) as Option[]\n  }\n\n  // Pass in an array of id that will loop through\n  // each option and set the selected property to true\n  public setSelectedBy(selectedType: 'id' | 'value', selectedVals: string[]) {\n    for (let dataObj of this.data) {\n      // Optgroup\n      if (dataObj instanceof Optgroup) {\n        for (let option of dataObj.options) {\n          if (option[selectedType]) {\n            option.selected = selectedVals.includes(option[selectedType] as string)\n          }\n        }\n      }\n\n      // Option\n      if (dataObj instanceof Option) {\n        if (dataObj[selectedType]) {\n          dataObj.selected = selectedVals.includes(dataObj[selectedType] as string)\n        }\n      }\n    }\n  }\n\n  // Loop through each option and optgroup options\n  // and return an array of all the selected options\n  public getSelected(): DataArray {\n    return this.filter((opt: Option) => {\n      return opt.selected\n    }, true)\n  }\n\n  public getSelectedOptions(): Option[] {\n    return this.filter((opt: Option) => {\n      return opt.selected\n    }, false) as Option[]\n  }\n\n  public getSelectedIDs(): string[] {\n    let selectedOptions = this.getSelected()\n\n    let selectedIDs: string[] = []\n    selectedOptions.forEach((dataObj: DataObject) => {\n      if (dataObj instanceof Optgroup) {\n        dataObj.options.forEach((option: Option) => {\n          selectedIDs.push(option.id)\n        })\n      } else {\n        selectedIDs.push(dataObj.id)\n      }\n    })\n\n    return selectedIDs\n  }\n\n  public getOptionByID(id: string): Option | null {\n    let options = this.filter((opt: Option) => {\n      return opt.id === id\n    }, false) as Option[]\n\n    return options.length ? options[0] : null\n  }\n\n  // Take in search string and return filtered list of values\n  public search(search: string, searchFilter?: (opt: Option, search: string) => boolean): DataArray {\n    search = search.trim()\n    if (search === '') {\n      return []\n    }\n\n    return this.filter((opt: Option): boolean => {\n      if (searchFilter) {\n        return searchFilter(opt, search)\n      }\n\n      // If the searchFilter is not set use default\n      return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1\n    }, true)\n  }\n\n  // Filter takes in a function that will be used to filter the data\n  // This will also keep optgroups of sub options meet the filter requirements\n  public filter(filter: { (opt: Option): boolean } | null, includeOptgroup: boolean): DataArray {\n    const dataSearch: DataArray = []\n    this.data.forEach((dataObj: DataObject) => {\n      // Optgroup\n      if (dataObj instanceof Optgroup) {\n        // If you dont want to include optgroups\n        if (!includeOptgroup) {\n          // Loop through each option and check if it meets the filter requirements\n          dataObj.options.forEach((option: Option) => {\n            if (filter && filter(option)) {\n              dataSearch.push(option)\n            }\n          })\n        } else {\n          let optOptions: Option[] = []\n          dataObj.options.forEach((option: Option) => {\n            if (!filter || filter(option)) {\n              optOptions.push(new Option(option))\n            }\n          })\n\n          if (optOptions.length > 0) {\n            dataSearch.push(new Optgroup({ id: dataObj.id, label: dataObj.label, options: optOptions }))\n          }\n        }\n      }\n\n      // Option\n      if (dataObj instanceof Option) {\n        if (!filter || filter(dataObj)) {\n          dataSearch.push(new Option(dataObj))\n        }\n      }\n    })\n\n    return dataSearch\n  }\n}\n","import { ensureElementInView, highlight, isValueInArrayOfObjects } from './helper'\nimport Settings from './settings'\nimport Store, { DataArray, Optgroup, Option } from './store'\n\nexport interface Callbacks {\n  open: () => void\n  close: () => void\n  addSelected: (value: string) => void\n  setSelected: (value: string[]) => void\n  addOption: (option: Option) => void\n  search: (search: string) => void\n  beforeChange?: (before: DataArray, after: DataArray) => boolean\n  beforeDelete?: (before: DataArray, after: DataArray) => boolean\n  deleteByID: (id: string) => void\n}\n\nexport interface SingleSelected {\n  container: HTMLDivElement\n  placeholder: HTMLSpanElement\n  deselect: HTMLSpanElement\n  arrowIcon: {\n    container: HTMLSpanElement\n    arrow: HTMLSpanElement\n  }\n}\n\nexport interface MultiSelected {\n  container: HTMLDivElement\n  values: HTMLDivElement\n  add: HTMLDivElement\n  plus: HTMLSpanElement\n}\n\nexport interface Search {\n  container: HTMLDivElement\n  input: HTMLInputElement\n  addable?: HTMLDivElement\n}\n\nexport default class Slim {\n  public settings: Settings\n  public store: Store\n  public callbacks: Callbacks\n\n  // Elements\n  public main: HTMLDivElement\n  public singleSelected: SingleSelected | null = null\n  public multiSelected: MultiSelected | null = null\n  public content: HTMLDivElement\n  public search: Search\n  public list: HTMLDivElement\n\n  // Classes\n  public classes = {\n    main: 'ss-main',\n    singleSelected: 'ss-single-selected',\n    multiSelected: 'ss-multi-selected',\n    arrow: 'ss-arrow',\n    add: 'ss-add',\n    plus: 'ss-plus',\n    values: 'ss-values',\n    value: 'ss-value',\n    valueText: 'ss-value-text',\n    valueDelete: 'ss-value-delete',\n    content: 'ss-content',\n    open: 'ss-open',\n    openAbove: 'ss-open-above',\n    openBelow: 'ss-open-below',\n    search: 'ss-search',\n    searchHighlighter: 'ss-search-highlight',\n    addable: 'ss-addable',\n    list: 'ss-list',\n    optgroup: 'ss-optgroup',\n    optgroupLabel: 'ss-optgroup-label',\n    optgroupLabelSelectable: 'ss-optgroup-label-selectable',\n    option: 'ss-option',\n    optionSelected: 'ss-option-selected',\n    highlighted: 'ss-highlighted',\n    disabled: 'ss-disabled',\n    hide: 'ss-hide',\n  }\n\n  constructor(settings: Required<Settings>, store: Store, callbacks: Callbacks) {\n    this.store = store\n    this.settings = settings\n    this.callbacks = callbacks\n\n    this.main = this.mainDiv()\n    this.content = this.contentDiv()\n    this.search = this.searchDiv()\n    this.list = this.listDiv()\n    this.options()\n\n    this.singleSelected = null\n    this.multiSelected = null\n    if (this.settings.isMultiple) {\n      this.multiSelected = this.multiSelectedDiv()\n      this.main.appendChild(this.multiSelected.container)\n    } else {\n      this.singleSelected = this.singleSelectedDiv()\n      this.main.appendChild(this.singleSelected.container)\n    }\n    if (this.settings.addToBody) {\n      // add the id to the content as a class as well\n      // this is important on touch devices as the close method is\n      // triggered when clicks on the document body occur\n      this.content.classList.add(this.main.id)\n      document.body.appendChild(this.content)\n    } else {\n      this.main.appendChild(this.content)\n    }\n    this.content.appendChild(this.search.container)\n    this.content.appendChild(this.list)\n  }\n\n  public mainDiv(): HTMLDivElement {\n    // Create main container\n    const container = document.createElement('div') as HTMLDivElement\n\n    // Add style and classes\n    container.style.cssText = this.settings.style || ''\n\n    // Clear out classlist\n    container.className = ''\n\n    // Loop through config class and add\n    container.classList.add(this.settings.id)\n    container.classList.add(this.classes.main)\n    if (this.settings.class) {\n      for (const c of this.settings.class) {\n        if (c.trim() !== '') {\n          container.classList.add(c.trim())\n        }\n      }\n    }\n\n    return container\n  }\n\n  public singleSelectedDiv(): SingleSelected {\n    const container: HTMLDivElement = document.createElement('div')\n    container.classList.add(this.classes.singleSelected)\n\n    // Placeholder text\n    const placeholder: HTMLSpanElement = document.createElement('span')\n    placeholder.classList.add('placeholder')\n    container.appendChild(placeholder)\n\n    // Deselect\n    const deselect = document.createElement('span')\n    deselect.innerHTML = this.settings.deselectLabel\n    deselect.classList.add('ss-deselect')\n    deselect.onclick = (e) => {\n      e.stopPropagation()\n\n      // Dont do anything if disabled\n      if (!this.settings.isEnabled) {\n        return\n      }\n\n      this.callbacks.setSelected([''])\n    }\n    container.appendChild(deselect)\n\n    // Arrow\n    const arrowContainer: HTMLSpanElement = document.createElement('span')\n    arrowContainer.classList.add(this.classes.arrow)\n    const arrowIcon = document.createElement('span')\n    arrowIcon.classList.add('arrow-down')\n    arrowContainer.appendChild(arrowIcon)\n    container.appendChild(arrowContainer)\n\n    // Add onclick for container selector div\n    container.onclick = () => {\n      if (!this.settings.isEnabled) {\n        return\n      }\n\n      this.settings.isOpen ? this.callbacks.close() : this.callbacks.open()\n    }\n\n    return {\n      container,\n      placeholder,\n      deselect,\n      arrowIcon: {\n        container: arrowContainer,\n        arrow: arrowIcon,\n      },\n    }\n  }\n\n  public multiSelectedDiv(): MultiSelected {\n    const container = document.createElement('div')\n    container.classList.add(this.classes.multiSelected)\n\n    const values = document.createElement('div')\n    values.classList.add(this.classes.values)\n    container.appendChild(values)\n\n    const add = document.createElement('div')\n    add.classList.add(this.classes.add)\n    const plus = document.createElement('span')\n    plus.classList.add(this.classes.plus)\n    plus.onclick = (e) => {\n      if (this.settings.isOpen) {\n        this.callbacks.close()\n        e.stopPropagation()\n      }\n    }\n    add.appendChild(plus)\n    container.appendChild(add)\n\n    container.onclick = (e) => {\n      if (!this.settings.isEnabled) {\n        return\n      }\n\n      // Open only if you are not clicking on x text\n      const target = e.target as Element\n      if (!target.classList.contains(this.classes.valueDelete)) {\n        this.settings.isOpen ? this.callbacks.close() : this.callbacks.open()\n      }\n    }\n\n    return {\n      container,\n      values,\n      add,\n      plus,\n    }\n  }\n\n  // Create content container\n  public contentDiv(): HTMLDivElement {\n    const container = document.createElement('div')\n    container.classList.add(this.classes.content)\n    return container\n  }\n\n  public searchDiv(): Search {\n    const container = document.createElement('div')\n    const input = document.createElement('input')\n    const addable = document.createElement('div')\n    container.classList.add(this.classes.search)\n\n    // Setup search return object\n    const searchReturn: Search = {\n      container,\n      input,\n    }\n\n    // We still want the search to be tabable but not shown\n    if (!this.settings.showSearch) {\n      container.classList.add(this.classes.hide)\n      input.readOnly = true\n    }\n\n    input.type = 'search'\n    input.placeholder = this.settings.searchPlaceholder\n    input.tabIndex = 0\n    input.setAttribute('aria-label', this.settings.searchPlaceholder)\n    input.setAttribute('autocapitalize', 'off')\n    input.setAttribute('autocomplete', 'off')\n    input.setAttribute('autocorrect', 'off')\n    input.onclick = (e) => {\n      setTimeout(() => {\n        const target = e.target as HTMLInputElement\n        if (target.value === '') {\n          this.callbacks.search('')\n        }\n      }, 10)\n    }\n    input.onkeydown = (e) => {\n      if (e.key === 'ArrowUp') {\n        if (this.settings.isOpen) {\n          this.callbacks.open()\n        }\n        this.highlightUp()\n        e.preventDefault()\n      } else if (e.key === 'ArrowDown') {\n        if (this.settings.isOpen) {\n          this.callbacks.open()\n        }\n        this.highlightDown()\n        e.preventDefault()\n      } else if (e.key === 'Tab') {\n        if (!this.settings.isOpen) {\n          setTimeout(() => {\n            this.callbacks.close()\n          }, this.settings.timeoutDelay)\n        } else {\n          this.callbacks.close()\n        }\n      } else if (e.key === 'Enter') {\n        e.preventDefault()\n      }\n    }\n    input.onkeyup = (e) => {\n      const target = e.target as HTMLInputElement\n      if (e.key === 'Enter') {\n        if (this.settings.isAddable && e.ctrlKey) {\n          addable.click()\n          e.preventDefault()\n          e.stopPropagation()\n          return\n        }\n        const highlighted = this.list.querySelector('.' + this.classes.highlighted) as HTMLDivElement\n        if (highlighted) {\n          highlighted.click()\n        }\n      } else if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n        // Cancel out to leave for onkeydown to handle\n      } else if (e.key === 'Escape') {\n        this.callbacks.close()\n      } else {\n        if (this.settings.showSearch && this.settings.isOpen) {\n          this.callbacks.search(target.value)\n        } else {\n          input.value = ''\n        }\n      }\n      e.preventDefault()\n      e.stopPropagation()\n    }\n    input.onfocus = () => {\n      this.callbacks.open()\n    }\n    container.appendChild(input)\n\n    if (this.settings.isAddable) {\n      addable.classList.add(this.classes.addable)\n      addable.innerHTML = '+'\n      addable.onclick = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        const inputValue = this.search.input.value\n        if (inputValue.trim() === '') {\n          this.search.input.focus()\n          return\n        }\n\n        // Call add option\n        this.callbacks.addOption(new Option({ text: inputValue, value: inputValue }))\n\n        // Add option to selected\n        this.callbacks.setSelected([inputValue])\n\n        // Clear search\n        this.callbacks.search('')\n\n        // Close it only if closeOnSelect = true\n        if (this.settings.closeOnSelect) {\n          setTimeout(() => {\n            // Give it a little padding for a better looking animation\n            this.callbacks.close()\n          }, 100)\n        }\n      }\n      container.appendChild(addable)\n\n      searchReturn.addable = addable\n    }\n\n    return searchReturn\n  }\n\n  public highlightUp(): void {\n    const highlighted = this.list.querySelector('.' + this.classes.highlighted) as HTMLDivElement\n    let prev: HTMLDivElement | null = null\n    if (highlighted) {\n      prev = highlighted.previousSibling as HTMLDivElement\n      while (prev !== null) {\n        if (prev.classList.contains(this.classes.disabled)) {\n          prev = prev.previousSibling as HTMLDivElement\n          continue\n        } else {\n          break\n        }\n      }\n    } else {\n      const allOptions = this.list.querySelectorAll('.' + this.classes.option + ':not(.' + this.classes.disabled + ')')\n      prev = allOptions[allOptions.length - 1] as HTMLDivElement\n    }\n\n    // Do not select if optgroup label\n    if (prev && prev.classList.contains(this.classes.optgroupLabel)) {\n      prev = null\n    }\n\n    // Check if parent is optgroup\n    if (prev === null) {\n      const parent = highlighted.parentNode as HTMLDivElement\n      if (parent.classList.contains(this.classes.optgroup)) {\n        if (parent.previousSibling) {\n          const prevNodes = (parent.previousSibling as HTMLDivElement).querySelectorAll(\n            '.' + this.classes.option + ':not(.' + this.classes.disabled + ')',\n          )\n          if (prevNodes.length) {\n            prev = prevNodes[prevNodes.length - 1] as HTMLDivElement\n          }\n        }\n      }\n    }\n\n    // If previous element exists highlight it\n    if (prev) {\n      if (highlighted) {\n        highlighted.classList.remove(this.classes.highlighted)\n      }\n      prev.classList.add(this.classes.highlighted)\n      ensureElementInView(this.list, prev)\n    }\n  }\n\n  public highlightDown(): void {\n    const highlighted = this.list.querySelector('.' + this.classes.highlighted) as HTMLDivElement\n    let next = null\n\n    if (highlighted) {\n      next = highlighted.nextSibling as HTMLDivElement\n      while (next !== null) {\n        if (next.classList.contains(this.classes.disabled)) {\n          next = next.nextSibling as HTMLDivElement\n          continue\n        } else {\n          break\n        }\n      }\n    } else {\n      next = this.list.querySelector(\n        '.' + this.classes.option + ':not(.' + this.classes.disabled + ')',\n      ) as HTMLDivElement\n    }\n\n    // Check if parent is optgroup\n    if (next === null && highlighted !== null) {\n      const parent = highlighted.parentNode as HTMLDivElement\n      if (parent.classList.contains(this.classes.optgroup)) {\n        if (parent.nextSibling) {\n          const sibling = parent.nextSibling as HTMLDivElement\n          next = sibling.querySelector(\n            '.' + this.classes.option + ':not(.' + this.classes.disabled + ')',\n          ) as HTMLDivElement\n        }\n      }\n    }\n\n    // If previous element exists highlight it\n    if (next) {\n      if (highlighted) {\n        highlighted.classList.remove(this.classes.highlighted)\n      }\n      next.classList.add(this.classes.highlighted)\n      ensureElementInView(this.list, next)\n    }\n  }\n\n  // Create main container that options will reside\n  public listDiv(): HTMLDivElement {\n    const list = document.createElement('div')\n    list.classList.add(this.classes.list)\n    list.setAttribute('role', 'listbox')\n\n    return list\n  }\n\n  // Get selected values and append to multiSelected values container\n  // and remove those who shouldnt exist\n  public values(): void {\n    if (!this.multiSelected) {\n      return\n    }\n    let currentNodes = this.multiSelected.values.childNodes as any as HTMLDivElement[]\n    let dataOptions = this.store.getDataOptions()\n    let selectedIDs = this.store.getSelectedIDs()\n\n    // Filter currentNodes to only include ones that are not in selectedIDs\n    let removeNodes = currentNodes.filter((node) => {\n      return selectedIDs.indexOf(String(node.dataset.id)) === -1\n    })\n\n    // Loop through and remove\n    for (const n of removeNodes) {\n      n.classList.add('ss-out')\n      this.multiSelected.values.removeChild(n)\n    }\n\n    // Add values that dont currently exist\n    currentNodes = this.multiSelected.values.childNodes as any as HTMLDivElement[]\n    let exists = true\n    for (let s = 0; s < dataOptions.length; s++) {\n      exists = false\n      for (const c of currentNodes) {\n        if (dataOptions[s].id === String(c.dataset.id)) {\n          exists = true\n        }\n      }\n\n      if (!exists) {\n        if (currentNodes.length === 0 || !HTMLElement.prototype.insertAdjacentElement) {\n          this.multiSelected.values.appendChild(this.valueDiv(dataOptions[s]))\n        } else if (s === 0) {\n          this.multiSelected.values.insertBefore(this.valueDiv(dataOptions[s]), currentNodes[s] as any)\n        } else {\n          ;(currentNodes[s - 1] as any).insertAdjacentElement('afterend', this.valueDiv(dataOptions[s]))\n        }\n      }\n    }\n\n    // If there are no values set placeholder\n    if (dataOptions.length === 0) {\n      const placeholder = document.createElement('span')\n      placeholder.classList.add(this.classes.disabled)\n      placeholder.innerHTML = this.settings.placeholderText\n      this.multiSelected.values.innerHTML = placeholder.outerHTML\n    }\n  }\n\n  public valueDiv(option: Option): HTMLDivElement {\n    const value = document.createElement('div')\n    value.classList.add(this.classes.value)\n    value.dataset.id = option.id\n\n    const text = document.createElement('span')\n    text.classList.add(this.classes.valueText)\n    text.innerHTML = option.html && this.settings.valuesUseText !== true ? option.html : option.text\n    value.appendChild(text)\n\n    if (!option.mandatory) {\n      const deleteSpan = document.createElement('span')\n      deleteSpan.classList.add(this.classes.valueDelete)\n      deleteSpan.innerHTML = this.settings.deselectLabel\n      deleteSpan.onclick = (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        // By Default we will delete\n        let shouldDelete = true\n\n        // If there is a beforeDeselect function run it\n        // and determine\n        if (this.callbacks.beforeDelete) {\n          const before = this.store.getSelected()\n          const after = this.store.getSelected().filter((o) => {\n            return o.id !== option.id\n          })\n\n          shouldDelete = this.callbacks.beforeDelete(before, after) === true\n        }\n\n        if (shouldDelete) {\n          this.callbacks.deleteByID(option.id)\n        }\n      }\n\n      value.appendChild(deleteSpan)\n    }\n\n    return value\n  }\n\n  // Loop through data || filtered data and build options and append to list container\n  public options(content: string = ''): void {\n    const data = this.store.getData()\n\n    // Clear out innerHtml\n    this.list.innerHTML = ''\n\n    // If content is being passed just use that text\n    if (content !== '') {\n      const searching = document.createElement('div')\n      searching.classList.add(this.classes.option)\n      searching.classList.add(this.classes.disabled)\n      searching.innerHTML = content\n      this.list.appendChild(searching)\n      return\n    }\n\n    // If ajax and isSearching\n    if (this.settings.isAjax && this.settings.isSearching) {\n      const searching = document.createElement('div')\n      searching.classList.add(this.classes.option)\n      searching.classList.add(this.classes.disabled)\n      searching.innerHTML = this.settings.searchingText\n      this.list.appendChild(searching)\n      return\n    }\n\n    // If no results show no results text\n    if (data.length === 0) {\n      const noResults = document.createElement('div')\n      noResults.classList.add(this.classes.option)\n      noResults.classList.add(this.classes.disabled)\n      noResults.innerHTML = this.settings.searchText\n      this.list.appendChild(noResults)\n      return\n    }\n\n    // Append individual options to div container\n    for (const d of data) {\n      // Create optgroup\n      if (d instanceof Optgroup) {\n        const optgroupEl = document.createElement('div')\n        optgroupEl.classList.add(this.classes.optgroup)\n\n        // Create label\n        const optgroupLabel = document.createElement('div')\n        optgroupLabel.classList.add(this.classes.optgroupLabel)\n        if (this.settings.selectByGroup && this.settings.isMultiple) {\n          optgroupLabel.classList.add(this.classes.optgroupLabelSelectable)\n        }\n        optgroupLabel.innerHTML = d.label\n        optgroupEl.appendChild(optgroupLabel)\n\n        const options = d.options\n        if (options) {\n          for (const o of options) {\n            optgroupEl.appendChild(this.option(o))\n          }\n\n          // Selecting all values by clicking the group label\n          if (this.settings.selectByGroup && this.settings.isMultiple) {\n            optgroupLabel.addEventListener('click', (e: MouseEvent) => {\n              e.preventDefault()\n              e.stopPropagation()\n\n              for (const childEl of optgroupEl.children as any as HTMLDivElement[]) {\n                if (childEl.className.indexOf(this.classes.option) !== -1) {\n                  childEl.click()\n                }\n              }\n            })\n          }\n        }\n        this.list.appendChild(optgroupEl)\n      } else {\n        this.list.appendChild(this.option(d as Option))\n      }\n    }\n  }\n\n  // Create single option\n  public option(option: Option): HTMLDivElement {\n    // Add hidden placeholder\n    if (option.placeholder) {\n      const placeholder = document.createElement('div')\n      placeholder.classList.add(this.classes.option)\n      placeholder.classList.add(this.classes.hide)\n      return placeholder\n    }\n\n    const optionEl = document.createElement('div')\n\n    // Add class to div element\n    optionEl.classList.add(this.classes.option)\n    // Add WCAG attribute\n    optionEl.setAttribute('role', 'option')\n    if (option.class) {\n      option.class.split(' ').forEach((dataClass: string) => {\n        optionEl.classList.add(dataClass)\n      })\n    }\n\n    // Add style to div element\n    if (option.style) {\n      optionEl.style.cssText = option.style\n    }\n\n    const selected = this.store.getSelected()\n\n    optionEl.dataset.id = option.id\n    if (this.settings.searchHighlight && option.html && this.search.input.value.trim() !== '') {\n      optionEl.innerHTML = highlight(option.html, this.search.input.value, this.classes.searchHighlighter)\n    } else if (option.html) {\n      optionEl.innerHTML = option.html\n    }\n    if (this.settings.showOptionTooltips && optionEl.textContent) {\n      optionEl.setAttribute('title', optionEl.textContent)\n    }\n    optionEl.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      const element = e.target as HTMLDivElement\n      const elementID = element.dataset.id as string\n\n      // If option is selected and is allow to be deselected\n      if (option.selected && this.settings.allowDeselectOption) {\n        let shouldUpdate = false\n\n        // If no beforeOnChange is set automatically update at end\n        if (!this.callbacks.beforeChange || !this.settings.isMultiple) {\n          shouldUpdate = true\n        }\n\n        if (this.callbacks.beforeChange && this.settings.isMultiple) {\n          const before = this.store.getSelectedOptions()\n          const after = before.filter((option: Option) => {\n            return option.id !== elementID\n          })\n\n          // Check if beforeChange returns true\n          if (this.callbacks.beforeChange(before, after) === true) {\n            shouldUpdate = true\n          }\n        }\n\n        if (shouldUpdate) {\n          this.callbacks.addSelected(elementID)\n        }\n      } else {\n        // Check if option is disabled or is already selected, do nothing\n        if (option.disabled || option.selected) {\n          return\n        }\n\n        // Check if hit limit\n        if (this.settings.limit && Array.isArray(selected) && this.settings.limit <= selected.length) {\n          return\n        }\n\n        if (this.callbacks.beforeChange) {\n          // Get the option that is being selected\n          const clickedOption = this.store.getOptionByID(elementID) as Option\n          clickedOption.selected = true\n\n          const before = this.store.getSelectedOptions()\n          const after = before.concat(clickedOption)\n\n          // Check if beforeChange returns true\n          if (this.callbacks.beforeChange(before, after) === true) {\n            this.callbacks.addSelected(elementID)\n          }\n        } else {\n          this.callbacks.addSelected(elementID)\n        }\n      }\n    })\n\n    const isSelected = selected && isValueInArrayOfObjects(selected, 'id', option.id as string)\n    if (option.disabled || isSelected) {\n      optionEl.onclick = null\n      if (!this.settings.allowDeselectOption) {\n        optionEl.classList.add(this.classes.disabled)\n      }\n      if (this.settings.hideSelectedOption) {\n        optionEl.classList.add(this.classes.hide)\n      }\n    }\n\n    if (isSelected) {\n      optionEl.classList.add(this.classes.optionSelected)\n    } else {\n      optionEl.classList.remove(this.classes.optionSelected)\n    }\n\n    return optionEl\n  }\n\n  // Remove disabled classes\n  public enable(): void {\n    // Set search input to \"enabled\"\n    this.search.input.disabled = false\n\n    // Remove disabled class\n    if (this.settings.isMultiple && this.multiSelected) {\n      this.multiSelected.container.classList.remove(this.classes.disabled)\n    } else if (this.singleSelected) {\n      this.singleSelected.container.classList.remove(this.classes.disabled)\n    }\n  }\n\n  // Set disabled classes\n  public disable(): void {\n    // Set search input to disabled\n    this.search.input.disabled = true\n\n    // Add disabled class\n    if (this.settings.isMultiple && this.multiSelected) {\n      this.multiSelected.container.classList.add(this.classes.disabled)\n    } else if (this.singleSelected) {\n      this.singleSelected.container.classList.add(this.classes.disabled)\n    }\n  }\n\n  public moveContentAbove(): void {\n    let selectHeight: number = 0\n    if (this.settings.isMultiple && this.multiSelected) {\n      selectHeight = this.multiSelected.container.offsetHeight\n    } else if (this.singleSelected) {\n      selectHeight = this.singleSelected.container.offsetHeight\n    }\n    const contentHeight = this.content.offsetHeight\n    const height = selectHeight + contentHeight - 1\n    this.content.style.margin = '-' + height + 'px 0 0 0'\n    this.content.style.height = height - selectHeight + 1 + 'px'\n    this.content.style.transformOrigin = 'center bottom'\n\n    if (this.settings.isMultiple && this.multiSelected) {\n      this.multiSelected.container.classList.remove(this.classes.openBelow)\n      this.multiSelected.container.classList.add(this.classes.openAbove)\n    } else if (this.singleSelected) {\n      this.singleSelected.container.classList.remove(this.classes.openBelow)\n      this.singleSelected.container.classList.add(this.classes.openAbove)\n    }\n  }\n\n  public moveContentBelow(): void {\n    if (this.settings.isMultiple && this.multiSelected) {\n      this.multiSelected.container.classList.remove(this.classes.openAbove)\n      this.multiSelected.container.classList.add(this.classes.openBelow)\n    } else if (this.singleSelected) {\n      this.singleSelected.container.classList.remove(this.classes.openAbove)\n      this.singleSelected.container.classList.add(this.classes.openBelow)\n    }\n  }\n}\n","import { generateID, kebabCase } from './helper'\nimport { DataArray, Optgroup, Option } from './store'\n\nexport default class Select {\n  public select: HTMLSelectElement\n  public listen: boolean = false\n\n  // Mutation observer fields\n  public changeFunc?: (data: DataArray) => void\n  private observer: MutationObserver | null = null\n\n  constructor(select: HTMLSelectElement) {\n    this.select = select\n  }\n\n  // Set to enabled\n  public enable(): void {\n    // Disable original select but dont trigger observer\n    this.disconnectObserver()\n    this.select.disabled = false\n    this.connectObserver()\n  }\n\n  // Set to disabled\n  public disable(): void {\n    // Enable original select but dont trigger observer\n    this.disconnectObserver()\n    this.select.disabled = true\n    this.connectObserver()\n  }\n\n  // Set misc attributes on the main select element\n  public hideUI(): void {\n    this.select.tabIndex = -1\n    this.select.style.display = 'none'\n    this.select.setAttribute('aria-hidden', 'true')\n  }\n\n  public showUI(): void {\n    this.select.removeAttribute('tabindex')\n    this.select.style.display = ''\n    this.select.removeAttribute('aria-hidden')\n  }\n\n  public changeListen(on: boolean) {\n    this.listen = on\n\n    // Deal with some observer situations\n    if (this.listen) {\n      this.connectObserver()\n    } else {\n      this.disconnectObserver()\n    }\n  }\n\n  // Add change listener to original select\n  public addChangeFunc(func: (data: DataArray) => void): void {\n    this.changeFunc = func\n    this.addObserver()\n    this.connectObserver()\n    this.changeListen(true) // Last start listening\n  }\n\n  // remove change listener from original select\n  public removeChangeFunc(): void {\n    this.changeListen(false) // First stop listening\n    this.changeFunc = undefined\n  }\n\n  private observeWrapper(mutations: MutationRecord[]): void {\n    if (this.changeFunc) {\n      this.changeFunc(this.getData())\n    }\n  }\n\n  // Add MutationObserver to select\n  private addObserver(): void {\n    // If mutation observer already exists then disconnect and\n    if (this.observer) {\n      this.disconnectObserver()\n      this.observer = null\n    }\n\n    // If anything changes in the select then update the data\n    this.observer = new MutationObserver(this.observeWrapper)\n  }\n\n  private connectObserver(): void {\n    if (this.observer) {\n      this.observer.observe(this.select, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true,\n      })\n    }\n  }\n\n  private disconnectObserver(): void {\n    if (this.observer) {\n      this.observer.disconnect()\n    }\n  }\n\n  // From the select element pull optgroup and options into data\n  public getData(): DataArray {\n    let data = []\n\n    // Loop through nodes and get data\n    const nodes = this.select.childNodes as any as HTMLOptGroupElement[] | HTMLOptionElement[]\n    for (const n of nodes) {\n      // Optgroup\n      if (n.nodeName === 'OPTGROUP') {\n        data.push(this.getOptgroupData(n as HTMLOptGroupElement))\n      }\n\n      // Option\n      if (n.nodeName === 'OPTION') {\n        data.push(this.getOptionData(n as HTMLOptionElement))\n      }\n    }\n\n    return data\n  }\n\n  public getOptgroupData(optgroup: HTMLOptGroupElement): Optgroup {\n    let data = {\n      id: '',\n      label: optgroup.label,\n      options: [],\n    } as Optgroup\n\n    const options = optgroup.childNodes as any as HTMLOptionElement[]\n    for (const o of options) {\n      if (o.nodeName === 'OPTION') {\n        data.options.push(this.getOptionData(o as HTMLOptionElement))\n      }\n    }\n\n    return data\n  }\n\n  // From passed in option pull pieces of usable information\n  public getOptionData(option: HTMLOptionElement): Option {\n    return {\n      id: (option.dataset ? option.dataset.id : false) || generateID(),\n      value: option.value,\n      text: option.text,\n      html: option.innerHTML,\n      selected: option.selected,\n      disabled: option.disabled,\n      placeholder: option.dataset.placeholder || '',\n      class: option.className,\n      style: option.style.cssText,\n      data: option.dataset,\n      mandatory: option.dataset ? option.dataset.mandatory === 'true' : false,\n    } as Option\n  }\n\n  public updateSelect(id?: string, style?: string, classes?: string[]): void {\n    // Update specific select fields\n    if (id) {\n      this.select.id = id\n    }\n    if (style) {\n      this.select.style.cssText = style\n    }\n    if (classes) {\n      this.select.className = ''\n      classes.forEach((c) => {\n        this.select.classList.add(c)\n      })\n    }\n  }\n\n  public updateOptions(data: DataArray): void {\n    // Clear out select\n    this.select.innerHTML = ''\n\n    for (const d of data) {\n      if (d instanceof Optgroup) {\n        this.select.appendChild(this.createOptgroup(d))\n      }\n\n      if (d instanceof Option) {\n        this.select.appendChild(this.createOption(d))\n      }\n    }\n  }\n\n  public createOptgroup(optgroup: Optgroup): HTMLOptGroupElement {\n    const optgroupEl = document.createElement('optgroup')\n    optgroupEl.id = optgroup.id\n    optgroupEl.label = optgroup.label\n    if (optgroup.options) {\n      for (const o of optgroup.options) {\n        optgroupEl.appendChild(this.createOption(o))\n      }\n    }\n    return optgroupEl\n  }\n\n  public createOption(info: Option): HTMLOptionElement {\n    const optionEl = document.createElement('option')\n    optionEl.id = info.id\n    optionEl.value = info.value !== '' ? info.value : info.text\n    optionEl.innerHTML = info.html || info.text\n    if (info.selected) {\n      optionEl.selected = info.selected\n    }\n    if (info.display === false) {\n      optionEl.style.display = 'none'\n    }\n    if (info.disabled) {\n      optionEl.disabled = true\n    }\n    if (info.placeholder) {\n      optionEl.setAttribute('data-placeholder', 'true')\n    }\n    if (info.mandatory) {\n      optionEl.setAttribute('data-mandatory', 'true')\n    }\n    if (info.class) {\n      info.class.split(' ').forEach((optionClass: string) => {\n        optionEl.classList.add(optionClass)\n      })\n    }\n    if (info.data && typeof info.data === 'object') {\n      Object.keys(info.data).forEach((key) => {\n        optionEl.setAttribute('data-' + kebabCase(key), info.data[key])\n      })\n    }\n\n    return optionEl\n  }\n}\n","import { generateID } from './helper'\nimport { Option } from './store'\n\nexport default class Settings {\n  public id: string // Primary ID for the select\n  public style: string // Style attribute from the select element\n  public class: string[] // Class attribute from the select element\n\n  // Dynamic settings\n  public isMultiple: boolean = false\n  public isAjax: boolean = false\n  public isOpen: boolean = false\n  public isAddable: boolean = false\n  public isSearching: boolean = false\n\n  // Fields set from constructor\n  public isEnabled: boolean\n  public showSearch: boolean\n  public searchPlaceholder: string\n  public searchText: string\n  public searchingText: string\n  public searchFocus: boolean\n  public searchHighlight: boolean\n  public searchFilter: (opt: Option, search: string) => boolean\n  public closeOnSelect: boolean\n  public contentPosition: string\n  public placeholderText: string\n  public allowDeselect: boolean\n  public allowDeselectOption: boolean\n  public hideSelectedOption: boolean\n  public deselectLabel: string\n  public valuesUseText: boolean\n  public showOptionTooltips: boolean\n  public selectByGroup: boolean\n  public limit: number\n  public timeoutDelay: number\n  public addToBody: boolean\n\n  constructor(settings?: Partial<Settings>) {\n    if (!settings) {\n      settings = {}\n    }\n\n    this.id = 'ss-' + generateID()\n    this.style = settings.style || ''\n    this.class = settings.class || []\n\n    this.isEnabled = settings.isEnabled || true\n    this.showSearch = settings.showSearch || true\n    this.searchPlaceholder = settings.searchPlaceholder || 'Search'\n    this.searchText = settings.searchText || 'No Results'\n    this.searchingText = settings.searchingText || 'Searching...'\n    this.searchFocus = settings.searchFocus || true\n    this.searchHighlight = settings.searchHighlight || false\n    this.searchFilter =\n      settings.searchFilter ||\n      ((opt: Option, search: string) => {\n        return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1\n      })\n    this.closeOnSelect = settings.closeOnSelect || true\n    this.contentPosition = settings.contentPosition || 'auto' // options: auto, up, down\n    this.placeholderText = settings.placeholderText || 'Select Value'\n    this.allowDeselect = settings.allowDeselect || false\n    this.allowDeselectOption = settings.allowDeselectOption || false\n    this.hideSelectedOption = settings.hideSelectedOption || false\n    this.deselectLabel = settings.deselectLabel || 'x'\n    this.valuesUseText = settings.valuesUseText || false\n    this.showOptionTooltips = settings.showOptionTooltips || false\n    this.selectByGroup = settings.selectByGroup || false\n    this.limit = settings.limit || 0\n    this.timeoutDelay = settings.timeoutDelay || 200\n    this.addToBody = settings.addToBody || false\n  }\n}\n","import { debounce, hasClassInTree, putContent } from './helper'\nimport Render from './render'\nimport Select from './select'\nimport Settings from './settings'\nimport Store, { DataArray, Option } from './store'\n\nexport * from './helper'\nexport * from './render'\nexport * from './select'\nexport * from './settings'\nexport * from './store'\n\nexport interface Config {\n  select: string | Element\n  data?: DataArray\n  settings?: Settings\n  events?: Events\n}\n\nexport interface Events {\n  ajax?: (value: string, func: (info: any) => void) => void\n  addable?: (value: string) => Option | string\n  beforeOnChange?: (info: Option | Option[]) => void | boolean\n  onChange?: (info: Option | Option[]) => void\n  beforeOpen?: () => void\n  afterOpen?: () => void\n  beforeClose?: () => void\n  afterClose?: () => void\n}\n\nexport default class SlimSelect {\n  public selectEl: HTMLSelectElement\n\n  // Classes\n  public settings: Settings\n  public select: Select\n  public store: Store\n  public render: Render\n\n  // Events\n  public events = {\n    ajax: undefined,\n    addable: undefined,\n    beforeOnChange: undefined,\n    onChange: undefined,\n    beforeOpen: undefined,\n    afterOpen: undefined,\n    beforeClose: undefined,\n    afterClose: undefined,\n  } as Events\n\n  constructor(config: Config) {\n    // Make sure you get the right element\n    this.selectEl = (\n      typeof config.select === 'string' ? document.querySelector(config.select) : config.select\n    ) as HTMLSelectElement\n    if (!this.selectEl) {\n      throw new Error('Could not find select element')\n    }\n    if (this.selectEl.tagName !== 'SELECT') {\n      throw new Error('Element isnt of type select')\n    }\n\n    // If select already has a slim select id on it lets destroy it first\n    if (this.selectEl.dataset.ssid) {\n      this.destroy(this.selectEl.dataset.ssid)\n    }\n\n    // Set settings\n    this.settings = new Settings(config.settings)\n\n    // Upate settings with style and classname\n    this.settings.style = this.selectEl.style.cssText\n    this.settings.class = this.selectEl.className.split(' ')\n\n    // Set select class\n    this.select = new Select(this.selectEl)\n    this.select.updateSelect(this.settings.id, this.settings.style, this.settings.class)\n    this.select.hideUI()\n\n    // Set store class\n    this.store = new Store(config.data ? config.data : this.select.getData())\n\n    // If data is passed update the original select element\n    if (config.data) {\n      this.select.updateOptions(config.data)\n    }\n\n    // Set render callbacks\n    const callbacks = {\n      open: () => {},\n      close: () => {},\n      addSelected: (value: string) => {},\n      setSelected: (value: string[]) => {},\n      addOption: (option: Option) => {},\n      search: (search: string) => {},\n      beforeChange: (before: DataArray, after: DataArray) => {\n        return true\n      },\n      beforeDelete: (before: DataArray, after: DataArray) => {\n        return true\n      },\n      deleteByID: (id: string) => {},\n    }\n\n    // Setup render class\n    this.render = new Render(this.settings, this.store, callbacks)\n\n    // Add onclick listener to document to closeContent if clicked outside\n    document.addEventListener('click', this.documentClick)\n\n    // If the user wants to show the content forcibly on a specific side,\n    // there is no need to listen for scroll events\n    if (this.settings.contentPosition === 'auto') {\n      window.addEventListener('scroll', this.windowScroll, false)\n    }\n\n    // If disabled lets call it\n    if (!this.settings.isEnabled) {\n      this.disable()\n    }\n  }\n\n  public setEvents(events: Events) {\n    for (const key in events) {\n      if (events.hasOwnProperty(key)) {\n        ;(this.events as { [key: string]: any })[key] = (events as { [key: string]: any })[key]\n      }\n    }\n  }\n\n  // Set position will set the position of the content\n  public setPosition(position: 'up' | 'down'): void {\n    switch (position) {\n      case 'up':\n        this.settings.contentPosition = 'up'\n        this.render.moveContentAbove()\n        break\n\n      case 'down':\n        this.settings.contentPosition = 'down'\n        this.render.moveContentBelow()\n        break\n    }\n  }\n  // Set to enabled and remove disabled classes\n  public enable(): void {\n    this.settings.isEnabled = true\n\n    this.select.enable()\n    this.render.enable()\n  }\n\n  // Set to disabled and add disabled classes\n  public disable(): void {\n    this.settings.isEnabled = false\n\n    this.select.disable()\n    this.render.disable()\n  }\n\n  public destroy(ssid: string): void {\n    document.removeEventListener('click', this.documentClick)\n\n    if (this.settings.contentPosition === 'auto') {\n      window.removeEventListener('scroll', this.windowScroll, false)\n    }\n  }\n\n  // Event listener for window scrolling`\n  private windowScroll: (e: Event) => void = debounce((e: Event) => {\n    if (this.settings.isOpen) {\n      if (putContent(this.selectEl, this.settings.contentPosition, this.settings.isOpen) === 'above') {\n        this.setPosition('up')\n      } else {\n        this.setPosition('down')\n      }\n    }\n  })\n\n  // Event listener for document click\n  private documentClick: (e: Event) => void = (e: Event) => {\n    if (e.target && !hasClassInTree(e.target as HTMLElement, this.settings.id)) {\n      //   this.close()\n    }\n  }\n}\n"],"names":["generateID","Math","floor","random","toString","hasClassInTree","element","className","hasClass","e","c","classList","contains","parentByClass","document","parentNode","ensureElementInView","container","cTop","scrollTop","offsetTop","cBottom","clientHeight","eTop","eBottom","putContent","el","currentPosition","isOpen","height","offsetHeight","rect","getBoundingClientRect","elemTop","top","elemBottom","bottom","window","innerHeight","debounce","func","wait","immediate","timeout","args","_i","arguments","length","context","self","later","apply","callNow","clearTimeout","setTimeout","isValueInArrayOfObjects","selected","key","value","Array","isArray","selected_1","s","highlight","str","search","completedString","regex","RegExp","trim","match","matchStartPosition","index","matchEndPosition","originalTextFoundByRegex","substring","replace","concat","kebabCase","result","toLowerCase","toUpperCase","Optgroup","optgroup","this","id","label","options","_a","o","push","Option","option","text","html","display","disabled","placeholder","style","data","mandatory","Store","setData","prototype","_this","forEach","dataObj","optOptions_1","getData","filter","getDataOptions","setSelectedBy","selectedType","selectedVals","_b","_c","includes","getSelected","opt","getSelectedOptions","getSelectedIDs","selectedOptions","selectedIDs","getOptionByID","searchFilter","indexOf","includeOptgroup","dataSearch","optOptions_2","Slim","settings","store","callbacks","singleSelected","multiSelected","classes","main","arrow","add","plus","values","valueText","valueDelete","content","open","openAbove","openBelow","searchHighlighter","addable","list","optgroupLabel","optgroupLabelSelectable","optionSelected","highlighted","hide","mainDiv","contentDiv","searchDiv","listDiv","isMultiple","multiSelectedDiv","appendChild","singleSelectedDiv","addToBody","body","createElement","cssText","deselect","innerHTML","deselectLabel","onclick","stopPropagation","isEnabled","setSelected","arrowContainer","arrowIcon","close","target","input","searchReturn","showSearch","readOnly","type","searchPlaceholder","tabIndex","setAttribute","onkeydown","highlightUp","preventDefault","highlightDown","timeoutDelay","onkeyup","isAddable","ctrlKey","click","querySelector","onfocus","inputValue","addOption","closeOnSelect","focus","prev","previousSibling","allOptions","querySelectorAll","parent_1","prevNodes","remove","next","nextSibling","parent_2","currentNodes","childNodes","dataOptions","removeNodes_1","node","String","dataset","n","removeChild","exists","currentNodes_1","HTMLElement","insertAdjacentElement","insertBefore","valueDiv","placeholderText","outerHTML","valuesUseText","deleteSpan","shouldDelete","beforeDelete","before","after","deleteByID","searching","isAjax","isSearching","searchingText","noResults","searchText","d","optgroupEl_1","this_1","selectByGroup","options_1","addEventListener","children","childEl","data_1","optionEl","split","dataClass","searchHighlight","showOptionTooltips","textContent","elementID","allowDeselectOption","shouldUpdate","beforeChange","addSelected","limit","clickedOption","isSelected","hideSelectedOption","enable","disable","moveContentAbove","selectHeight","margin","transformOrigin","moveContentBelow","Select","select","listen","observer","disconnectObserver","connectObserver","hideUI","showUI","removeAttribute","changeListen","on","addChangeFunc","changeFunc","addObserver","removeChangeFunc","undefined","observeWrapper","mutations","MutationObserver","observe","attributes","childList","characterData","subtree","disconnect","nodes_1","nodeName","getOptgroupData","getOptionData","class","updateSelect","updateOptions","createOptgroup","createOption","optgroupEl","info","optionClass","Object","keys","Settings","searchFocus","contentPosition","allowDeselect","SlimSelect","config","events","ajax","beforeOnChange","onChange","beforeOpen","afterOpen","beforeClose","afterClose","windowScroll","selectEl","setPosition","documentClick","Error","tagName","ssid","destroy","render","Render","setEvents","hasOwnProperty","position","removeEventListener"],"mappings":"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"}